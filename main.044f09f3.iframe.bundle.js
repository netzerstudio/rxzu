(self.webpackChunkrxzu=self.webpackChunkrxzu||[]).push([[179],{"./libs/angular-storybook/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./actions/actions.stories.ts":"./libs/angular-storybook/stories/actions/actions.stories.ts","./auto-arrange/auto-arrange.stories.ts":"./libs/angular-storybook/stories/auto-arrange/auto-arrange.stories.ts","./drag-and-drop/drag-and-drop.stories.ts":"./libs/angular-storybook/stories/drag-and-drop/drag-and-drop.stories.ts","./dynamic-ports/dynamic-ports.stories.ts":"./libs/angular-storybook/stories/dynamic-ports/dynamic-ports.stories.ts","./fit-to-center/fit-to-center.stories.ts":"./libs/angular-storybook/stories/fit-to-center/fit-to-center.stories.ts","./performance/performance.stories.ts":"./libs/angular-storybook/stories/performance/performance.stories.ts","./themes/gh-workflow/gh-workflow.stories.ts":"./libs/angular-storybook/stories/themes/gh-workflow/gh-workflow.stories.ts","./themes/vonage-studio/vonage-studio.stories.ts":"./libs/angular-storybook/stories/themes/vonage-studio/vonage-studio.stories.ts","./zoom-to-fit/zoom-to-fit.stories.ts":"./libs/angular-storybook/stories/zoom-to-fit/zoom-to-fit.stories.ts","./zoom-to-node/zoom-to-node.stories.ts":"./libs/angular-storybook/stories/zoom-to-node/zoom-to-node.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./libs/angular-storybook/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./libs/angular-storybook/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./changelog.stories.mdx":"./libs/angular-storybook/stories/changelog.stories.mdx","./getting-started.stories.mdx":"./libs/angular-storybook/stories/getting-started.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./libs/angular-storybook/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"./libs/angular/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{oY:()=>DagrePlugin,mr:()=>DefaultLinkComponent,uA:()=>DefaultNodeComponent,ue:()=>DefaultPortComponent,Vm:()=>DiagramModel,Sm:()=>EngineService,aS:()=>LabelModel,KW:()=>LinkModel,Fi:()=>MODEL,XF:()=>NodeModel,AJ:()=>PortModel,BW:()=>RxZuDefaultsModule,CQ:()=>RxZuDiagramComponent,Om:()=>RxZuModule,Mr:()=>createValueState});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js");class BaseAction{constructor(){this.ms=(new Date).getTime()}}class BaseMouseAction extends BaseAction{constructor(mouseX,mouseY){super(),this.mouseX=mouseX,this.mouseY=mouseY}}class MoveCanvasAction extends BaseMouseAction{constructor(mouseX,mouseY,diagramModel){super(mouseX,mouseY),this.initialOffsetX=diagramModel.getOffsetX(),this.initialOffsetY=diagramModel.getOffsetY()}}class SelectingAction extends BaseMouseAction{constructor(mouseX,mouseY){super(mouseX,mouseY),this.mouseX2=mouseX,this.mouseY2=mouseY,this.dimensions={top:0,left:0,width:0,height:0,right:0,bottom:0}}getBoxDimensions(){return this.dimensions={left:this.mouseX2>this.mouseX?this.mouseX:this.mouseX2,top:this.mouseY2>this.mouseY?this.mouseY:this.mouseY2,width:Math.abs(this.mouseX2-this.mouseX),height:Math.abs(this.mouseY2-this.mouseY),right:this.mouseX2<this.mouseX?this.mouseX:this.mouseX2,bottom:this.mouseY2<this.mouseY?this.mouseY:this.mouseY2},this.dimensions}containsElement(topLeftPoint,bottomRightPoint,diagramModel){const z=diagramModel.getZoomLevel()/100,dimensions=this.getBoxDimensions(),isContainsTopLeftPoint=topLeftPoint.x*z+diagramModel.getOffsetX()>dimensions.left&&topLeftPoint.x*z+diagramModel.getOffsetX()<dimensions.right&&topLeftPoint.y*z+diagramModel.getOffsetY()>dimensions.top&&topLeftPoint.y*z+diagramModel.getOffsetY()<dimensions.bottom,isContainBottomRightPoint=bottomRightPoint.x*z+diagramModel.getOffsetX()>dimensions.left&&bottomRightPoint.x*z+diagramModel.getOffsetX()<dimensions.right&&bottomRightPoint.y*z+diagramModel.getOffsetY()>dimensions.top&&bottomRightPoint.y*z+diagramModel.getOffsetY()<dimensions.bottom;return isContainsTopLeftPoint&&isContainBottomRightPoint}}var LOG_LEVEL,distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js");!function(LOG_LEVEL){LOG_LEVEL[LOG_LEVEL.LOG=0]="LOG",LOG_LEVEL[LOG_LEVEL.ERROR=1]="ERROR"}(LOG_LEVEL||(LOG_LEVEL={}));let __DEV__=!0,__LOG__=LOG_LEVEL.ERROR;function isDev(){return __DEV__}function log(message,level=LOG_LEVEL.LOG,...args){isDev()&&__LOG__===level&&(__LOG__===LOG_LEVEL.ERROR&&console.error(message,...args),console.log(message,...args))}function withLog(message,level=LOG_LEVEL.LOG,...args){return source=>isDev()?source.pipe((0,tap.b)((val=>log(message,level,val,...args)))):source}function UID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(c=>{const r=16*Math.random()|0;return("x"===c?r:3&r|8).toString(16)}))}function isNil(v){return null==v}function isEmptyArray(arr){return!arr||!function isArray(val){return Array.isArray(val)}(arr)||0===arr.length}function toRegistryKey(type,name="default"){return`${type}-${name}`}var BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js");class ValueState{constructor(value,operator){this.stream$=new BehaviorSubject.X(value),this.value$=operator?this.stream$.pipe(operator):this.stream$.asObservable()}get value(){return this.stream$.getValue()}set(value){return this.stream$.next(value),this}select(project){const mapFn=project||(v=>v);return this.value$.pipe((0,map.U)((value=>mapFn(value))),(0,distinctUntilChanged.x)())}}class EntityState extends ValueState{constructor(value,entityPipe){super(value,entityPipe)}destroy(){this.clear()}clear(){return this.forEach((entity=>entity.destroy())),this.value.clear(),this.stream$.next(this.value),this}get(id){return this.value.get(id)}has(id){return this.value.has(id)}add(entity){return this.value.set(entity.id,entity),this.stream$.next(this.value),this}addMany(entities){for(const entity of entities)this.add(entity);return this.stream$.next(this.value),this}remove(id,destroy=!0){var _a;return destroy&&(null===(_a=this.value.get(id))||void 0===_a||_a.destroy()),this.value.delete(id),this.stream$.next(this.value),this}array(){return Array.from(this.value.values())}array$(){return this.select((value=>Array.from(value.values())))}forEach(cb){this.value.forEach(cb)}map(cb){return this.array().map(cb)}}function createValueState(value,operator){return new ValueState(value,operator)}function createEntityState(value=[],entityPipe){return Array.isArray(value)?new EntityState(new Map(value),entityPipe):new EntityState(new Map(function mapToEntries(map){const result=[];for(const key in map)result.push([key,map[key]]);return result}(value)),entityPipe)}var Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js");class BaseEvent{constructor(entity){this.id=UID(),this.entity=entity,this.entityId=entity.id,this.firing=!0}}class LockEvent extends BaseEvent{constructor(entity,locked=!1){super(entity),this.locked=locked}}class ParentChangeEvent extends BaseEvent{constructor(entity,parent){super(entity),this.parent=parent}}class SelectionEvent extends BaseEvent{constructor(entity,selected){super(entity),this.isSelected=selected}}class PaintedEvent extends BaseEvent{constructor(entity,painted){super(entity),this.isPainted=painted}}class BaseEntity{constructor(options){var _a,_b;this._id=options.id||UID(),this._type=options.type,this._logPrefix=`${null!==(_a=options.logPrefix)&&void 0!==_a?_a:""}`,this.destroyed$=new Subject.x,this.locked$=createValueState(!!options.locked,this.entityPipe("locked")),this.namespace$=createValueState(null!==(_b=options.namespace)&&void 0!==_b?_b:"default",this.entityPipe("name"))}get type(){return this._type}get id(){return this._id}set id(id){this._id=id}get namespace(){return this.namespace$.value}set namespace(value){this.namespace$.set(value)}log(message,...args){log(`${this._logPrefix} ${message}: `,LOG_LEVEL.LOG,...args)}withLog(message,...args){return withLog(`${this._logPrefix} ${message}: `,LOG_LEVEL.LOG,...args)}entityPipe(logMessage=""){return function entityProperty(destroyedNotifier,replayBy=1,logMessage=""){return source=>source.pipe((0,distinctUntilChanged.x)(((a,b)=>!(a instanceof Map||b instanceof Map)&&a===b)),(0,shareReplay.d)(replayBy),withLog(logMessage),(0,takeUntil.R)(destroyedNotifier))}(this.onEntityDestroy(),0,`${this._logPrefix}: ${logMessage}`)}getLocked(){return this.locked$.value}setLocked(locked=!0){this.locked$.set(locked)}doClone(lookupTable={},clone){}clone(lookupTable={}){if(lookupTable[this.id])return lookupTable[this.id];const clone=Object.assign({},this);return clone.id=UID(),lookupTable[this.id]=clone,this.doClone(lookupTable,clone),clone}lockChanges(){return this.locked$.select((locked=>new LockEvent(this,locked)))}destroy(){this.log("entity destroyed"),this.destroyed$.next(),this.destroyed$.complete()}onEntityDestroy(){return this.destroyed$.pipe((0,map.U)((()=>new BaseEvent(this))))}}class BaseModel extends BaseEntity{constructor(options){super(Object.assign({namespace:"default"},options)),this.parent$=createValueState(options.parent,this.entityPipe("ParentsChange")),this.selected$=createValueState(!1,this.entityPipe("SelectedChange")),this.hovered$=createValueState(!1,this.entityPipe("HoveredChange")),this.painted$=createValueState(new PaintedEvent(this,!1),this.entityPipe("PaintedChange"))}getParent(){return this.parent$.value}setParent(parent){this.parent$.set(parent)}parentChanges(){return this.parent$.select((p=>new ParentChangeEvent(this,p)))}getPainted(){return this.painted$.value}setPainted(painted=!0){this.painted$.set(new PaintedEvent(this,painted))}paintChanges(){return this.painted$.value$}getHovered(){return this.hovered$.value}setHovered(hovered=!0){this.hovered$.set(hovered)}selectHovered(){return this.hovered$.select()}getSelected(){return this.selected$.value}selectSelected(){return this.selected$.select()}setSelected(selected=!0){this.selected$.set(selected)}selectionChanges(){return this.selected$.select((selected=>new SelectionEvent(this,selected)))}getSelectedEntities(){return this.getSelected()?[this]:[]}}class PointModel extends BaseModel{constructor(options={}){var _a;super(Object.assign({type:"point",logPrefix:"[Point]"},options)),this.coords$=createValueState(null!==(_a=options.coords)&&void 0!==_a?_a:{x:0,y:0},this.entityPipe("coords"))}isConnectedToPort(){var _a;return null!==(null===(_a=this.getParent())||void 0===_a?void 0:_a.getPortForPoint(this))}getLink(){return this.getParent()}destroy(){var _a;null===(_a=this.getParent())||void 0===_a||_a.removePoint(this),super.destroy()}setCoords(newCoords){this.coords$.set(Object.assign(Object.assign({},this.getCoords()),newCoords))}selectCoords(){return this.coords$.value$}getCoords(){return this.coords$.value}selectX(){return this.coords$.select((coords=>coords.x))}selectY(){return this.coords$.select((coords=>coords.y))}}class LinkModel extends BaseModel{constructor(options={}){var _a,_b,_c,_d;super(Object.assign({type:"link",logPrefix:"[Link]"},options)),this.sourcePort$=createValueState(null!==(_a=options.sourcePort)&&void 0!==_a?_a:null,this.entityPipe("sourcePort")),this.targetPort$=createValueState(null!==(_b=options.targetPort)&&void 0!==_b?_b:null,this.entityPipe("targetPort")),this.extras$=createValueState(null!==(_c=options.extras)&&void 0!==_c?_c:{},this.entityPipe("extras")),this.label$=createValueState(null!==(_d=options.label)&&void 0!==_d?_d:null,this.entityPipe("label")),this.path$=createValueState(null,this.entityPipe("path")),this.points$=createValueState([new PointModel({parent:this,namespace:"default"}),new PointModel({parent:this,namespace:"default"})],this.entityPipe("points"))}setExtras(extras){this.extras$.set(extras)}getExtras(){return this.extras$.value}selectExtras(selector){return this.extras$.select(selector)}setPath(path){this.path$.set(path)}getPath(){return this.path$.value}selectPath(){return this.path$.select()}destroy(){var _a,_b;this.resetLabel(),null===(_a=this.sourcePort$.value)||void 0===_a||_a.removeLink(this),null===(_b=this.targetPort$.value)||void 0===_b||_b.removeLink(this),super.destroy()}doClone(lookupTable={},clone){clone.setPoints(this.getPoints().map((point=>point.clone(lookupTable)))),this.sourcePort$.value&&clone.setSourcePort(this.sourcePort$.value.clone(lookupTable)),this.targetPort$.value&&clone.setTargetPort(this.targetPort$.value.clone(lookupTable))}isLastPoint(point){return this.getPointIndex(point)===this.points$.value.length-1}getPointIndex(point){return this.points$.value.indexOf(point)}getPointModel(id){for(const point of this.points$.value)if(point.id===id)return point}getPortForPoint(point){return null!==this.sourcePort$.value&&this.getFirstPoint().id===point.id?this.sourcePort$.value:null!==this.targetPort$.value&&this.getLastPoint().id===point.id?this.targetPort$.value:null}getPointForPort(port){return null!==this.sourcePort$.value&&this.sourcePort$.value.id===port.id?this.getFirstPoint():null!==this.targetPort$.value&&this.targetPort$.value.id===port.id?this.getLastPoint():null}getFirstPoint(){return this.points$.value[0]}getLastPoint(){return this.points$.value[this.points$.value.length-1]}setSourcePort(port){var _a;null!==port&&port.addLink(this),null===(_a=this.getSourcePort())||void 0===_a||_a.removeLink(this),this.sourcePort$.set(port)}getSourcePort(){return this.sourcePort$.value}getTargetPort(){return this.targetPort$.value}setTargetPort(port){var _a;null!==port&&port.addLink(this),null===(_a=this.getTargetPort())||void 0===_a||_a.removeLink(this),this.targetPort$.set(port)}point({x,y}){return this.addPoint(this.generatePoint({x,y}))}getPoints(){return this.points$.value}selectPoints(){return this.points$.select()}setPoints(points){points.forEach((point=>{point.setParent(this)})),this.points$.set(points)}setLabel(label){label.setParent(this),this.label$.set(label)}selectLabel(){return this.label$.value$}getLabel(){return this.label$.value}resetLabel(){const currentLabel=this.getLabel();currentLabel&&currentLabel.destroy()}removePoint(pointModel){this.points$.value.splice(this.getPointIndex(pointModel),1)}removePointsBefore(pointModel){this.points$.value.splice(0,this.getPointIndex(pointModel))}removePointsAfter(pointModel){this.points$.value.splice(this.getPointIndex(pointModel)+1)}removeMiddlePoints(){this.points$.value.length>2&&this.points$.value.splice(0,this.points$.value.length-2)}addPoint(pointModel,index=1){return pointModel.setParent(this),pointModel.setLocked(this.getLocked()),this.points$.value.splice(index,0,pointModel),pointModel}generatePoint({x=0,y=0}){return new PointModel({parent:this,coords:{x,y}})}setLocked(locked=!0){super.setLocked(locked),this.points$.value.forEach((point=>point.setLocked(locked)))}}class MoveItemsAction extends BaseMouseAction{constructor(mouseX,mouseY,diagramEngine){super(mouseX,mouseY),this.moved=!1;const selectedItems=diagramEngine.getDiagramModel().getSelectedItems().filter((item=>!(diagramEngine.isModelLocked(item)||item instanceof LinkModel)));this.selectionModels=selectedItems.map((item=>{const{x:initialX,y:initialY}=item.getCoords();return{model:item,initialX,initialY}}))}}class LinkCreatedAction extends BaseAction{constructor(link){super(),this.sourcePort=null==link?void 0:link.getSourcePort(),this.targetPort=null==link?void 0:link.getTargetPort(),this.link=link}getOutPortNode(){var _a,_b;return null!==(_b=null===(_a=this.sourcePort)||void 0===_a?void 0:_a.getParent())&&void 0!==_b?_b:null}getInPortNode(){var _a,_b;return null!==(_b=null===(_a=this.targetPort)||void 0===_a?void 0:_a.getParent())&&void 0!==_b?_b:null}}class LooseLinkDestroyed extends BaseAction{constructor(link){super(),this.sourcePort=link.getSourcePort(),this.link=link}getOutPortNode(){var _a,_b;return null!==(_b=null===(_a=this.sourcePort)||void 0===_a?void 0:_a.getParent())&&void 0!==_b?_b:null}}class InvalidLinkDestroyed extends BaseAction{constructor(link){super(),this.link=link,this.sourcePort=link.getSourcePort()}getOutPortNode(){var _a,_b;return null!==(_b=null===(_a=this.sourcePort)||void 0===_a?void 0:_a.getParent())&&void 0!==_b?_b:null}}class NodeModel extends BaseModel{constructor(options={}){var _a,_b,_c;super(Object.assign({type:"node",logPrefix:"[Node]"},options)),this.ports$=createEntityState([],this.entityPipe("ports")),this.extras$=createValueState(null!==(_a=options.extras)&&void 0!==_a?_a:{},this.entityPipe("extras")),this.coords$=createValueState(null!==(_b=options.coords)&&void 0!==_b?_b:{x:0,y:0},this.entityPipe("coords")),this.dimensions$=createValueState(null!==(_c=options.dimensions)&&void 0!==_c?_c:{width:0,height:0},this.entityPipe("dimensions"))}updatePortCoords(port,engine){if(port.getPainted().isPainted&&this.getParent()){const canvasManager=engine.getCanvasManager(),portSize=canvasManager.getPortCoords(port),portCenter=canvasManager.getPortCenter(port);port.updateCoords(Object.assign(Object.assign({x:0,y:0,width:0,height:0},portSize),portCenter),engine)}}getCoords(){return this.coords$.value}setCoords({x,y}){const{x:oldX,y:oldY}=this.getCoords();this.getPorts().forEach((port=>{port.getLinks().forEach((link=>{const point=link.getPointForPort(port);if(!point)return;const{x:pointX,y:pointY}=point.getCoords();point.setCoords({x:pointX+x-oldX,y:pointY+y-oldY})}))})),this.coords$.set({x,y})}getSelectedEntities(){let entities=super.getSelectedEntities();const isPoint=point=>!!point;return this.getSelected()&&this.getPorts().forEach((port=>{const points=port.getLinksArray().map((link=>link.getPointForPort(port))).filter(isPoint);entities=entities.concat(points)})),this.log("selectedEntities",entities),entities}coordsChanges(){return this.coords$.value$}selectCoords(){return this.coords$.value$}selectX(){return this.coords$.select((coords=>coords.x))}selectY(){return this.coords$.select((coords=>coords.y))}addPort(port){return port.setParent(this),this.ports$.add(port),port}removePort(portOrId){const portId="string"==typeof portOrId?portOrId:portOrId.id;return this.ports$.remove(portId),portId}getPort(id){return id&&this.ports$.get(id)||void 0}selectPorts(selector){return this.ports$.array$().pipe(this.withLog("selectPorts"))}getPorts(){return this.ports$.value}getPortsArray(){return this.ports$.array()}setDimensions(dimensions){this.dimensions$.set(Object.assign(Object.assign({},this.getDimensions()),dimensions))}getDimensions(){return this.dimensions$.value}dimensionChanges(){return this.dimensions$.select()}getHeight(){return this.getDimensions().height}setHeight(height){return this.setDimensions({height})}getWidth(){return this.getDimensions().width}setWidth(width){return this.setDimensions({width})}selectWidth(){return this.dimensions$.select((d=>d.width)).pipe(this.withLog("selectWidth"))}selectHeight(){return this.dimensions$.select((d=>d.height)).pipe(this.withLog("selectHeight"))}setExtras(extras){this.extras$.set(extras)}getExtras(){return this.extras$.value}selectExtras(selector){return this.extras$.select(selector)}destroy(){super.destroy(),this.removeAllPorts()}removeAllPorts(){this.ports$.destroy()}}class DiagramModel extends BaseEntity{constructor(options={},diagramEngine){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;super(Object.assign({type:"diagram",logPrefix:"[Diagram]"},options)),diagramEngine&&(this._diagramEngine=diagramEngine),this.nodes$=createEntityState([],this.entityPipe("nodes")),this.links$=createEntityState([],this.entityPipe("links")),this.offsetX$=createValueState(null!==(_a=options.offsetX)&&void 0!==_a?_a:0,this.entityPipe("offsetX")),this.offsetY$=createValueState(null!==(_b=options.offsetY)&&void 0!==_b?_b:0,this.entityPipe("offsetY")),this.zoom$=createValueState(null!==(_c=options.zoom)&&void 0!==_c?_c:100,this.entityPipe("zoom")),this.maxZoomOut$=createValueState(null!==(_d=options.maxZoomOut)&&void 0!==_d?_d:0,this.entityPipe("maxZoomOut")),this.maxZoomIn$=createValueState(null!==(_e=options.maxZoomIn)&&void 0!==_e?_e:0,this.entityPipe("maxZoomIn")),this.gridSize$=createValueState(null!==(_f=options.gridSize)&&void 0!==_f?_f:0,this.entityPipe("gridSize")),this.allowCanvasZoom$=createValueState(null===(_g=options.allowCanvasZoom)||void 0===_g||_g,this.entityPipe("allowCanvasZoom")),this.allowCanvasTranslation$=createValueState(null===(_h=options.allowCanvasTranslation)||void 0===_h||_h,this.entityPipe("allowCanvasTranslation")),this.inverseZoom$=createValueState(null===(_j=options.inverseZoom)||void 0===_j||_j,this.entityPipe("inverseZoom")),this.allowLooseLinks$=createValueState(null===(_k=options.allowLooseLinks)||void 0===_k||_k,this.entityPipe("allowLooseLinks")),this.portMagneticRadius$=createValueState(null!==(_l=options.portMagneticRadius)&&void 0!==_l?_l:30,this.entityPipe("portMagneticRadius")),this.keyBindings$=createValueState(null!==(_m=options.keyBindings)&&void 0!==_m?_m:{},this.entityPipe("keyBindings"))}set diagramEngine(value){this._diagramEngine=value}get diagramEngine(){return this._diagramEngine}getNodes(){return this.nodes$.value}getNodesArray(){return this.nodes$.array()}getNode(id){return id&&this.nodes$.get(id)||void 0}getLink(id){return id&&this.links$.get(id)||void 0}getLinks(){return this.links$.value}getLinksArray(){return this.links$.array()}getAllPorts(options={}){const result=new Map;return this.getNodes().forEach((node=>{(options.filter?node.getPortsArray().filter(options.filter):node.getPortsArray()).forEach((port=>result.set(port.id,port)))})),result}addNode(node){return this.nodes$.add(node),node}deleteNode(nodeOrId){const nodeId="string"==typeof nodeOrId?nodeOrId:nodeOrId.id,node=this.getNode(nodeId);if(node){for(const port of node.getPorts().values())for(const link of port.getLinks().values())this.deleteLink(link);this.nodes$.remove(nodeId)}}selectNodes(){return this.nodes$.value$}addLink(link){return this.links$.add(link),link}deleteLink(linkOrId){const linkId="string"==typeof linkOrId?linkOrId:linkOrId.id;this.links$.remove(linkId)}reset(){this.nodes$.clear(),this.links$.clear()}selectLinks(){return this.links$.value$}setPortMagneticRadius(portMagneticRadius){this.portMagneticRadius$.set(portMagneticRadius)}getPortMagneticRadius(){return this.portMagneticRadius$.value}selectPortMagneticRadius(){return this.portMagneticRadius$.select()}setAllowLooseLinks(allowLooseLinks){this.allowLooseLinks$.set(allowLooseLinks)}getAllowLooseLinks(){return this.allowLooseLinks$.value}selectAllowLooseLinks(){return this.allowLooseLinks$.select()}setInverseZoom(inverseZoom){this.inverseZoom$.set(inverseZoom)}getInverseZoom(){return this.inverseZoom$.value}selectInverseZoom(){return this.inverseZoom$.select()}setKeyBindings(keyBindings){this.keyBindings$.set(keyBindings)}getKeyBindings(){return this.keyBindings$.value}selectKeyBindings(){return this.keyBindings$.select()}setAllowCanvasZoom(allowCanvasZoom){this.allowCanvasZoom$.set(allowCanvasZoom)}getAllowCanvasZoom(){return this.allowCanvasZoom$.value}selectAllowCanvasZoom(){return this.allowCanvasTranslation$.select()}setAllowCanvasTranslation(allowCanvasTranslation){this.allowCanvasTranslation$.set(allowCanvasTranslation)}getAllowCanvasTranslation(){return this.allowCanvasTranslation$.value}selectAllowCanvasTranslation(){return this.allowCanvasTranslation$.select()}setMaxZoomOut(maxZoomOut){this.maxZoomOut$.set(maxZoomOut)}getMaxZoomOut(){return this.maxZoomOut$.value}selectMaxZoomOut(){return this.maxZoomOut$.select()}setMaxZoomIn(maxZoomIn){this.maxZoomIn$.set(maxZoomIn)}getMaxZoomIn(){return this.maxZoomIn$.value}setOffset(x,y){this.offsetX$.set(x),this.offsetY$.set(y)}setOffsetX(x){this.offsetX$.set(x)}getOffsetX(){return this.offsetX$.value}selectOffsetX(){return this.offsetX$.value$}setOffsetY(y){this.offsetY$.set(y)}getOffsetY(){return this.offsetY$.value}selectOffsetY(){return this.offsetY$.value$}setZoomLevel(z){const maxZoomIn=this.getMaxZoomIn(),maxZoomOut=this.getMaxZoomOut();maxZoomIn&&z>maxZoomIn||maxZoomOut&&z<maxZoomOut||this.zoom$.set(z)}getZoomLevel(){return this.zoom$.value}selectZoomLevel(){return this.zoom$.value$}getDiagramEngine(){return this.diagramEngine}clearSelection(ignore=null){this.getSelectedItems().forEach((element=>{(null==ignore?void 0:ignore.id)!==element.id&&element.setSelected(!1)}))}getGridPosition({x,y}){const gridSize=this.gridSize$.value;return 0===gridSize?{x,y}:{x:gridSize*Math.floor((x+gridSize/2)/gridSize),y:gridSize*Math.floor((y+gridSize/2)/gridSize)}}getSelectedItems(...filters){filters=function coerceArray(value){return isNil(value)?[]:Array.isArray(value)?value:[value]}(filters);const items=[],nodes=this.nodes$.array(),links=this.links$.array(),selectedNodes=()=>nodes.flatMap((node=>node.getSelectedEntities())),selectedPorts=()=>nodes.flatMap((node=>node.getPortsArray().flatMap((port=>port.getSelectedEntities())))),selectedLinks=()=>links.flatMap((link=>link.getSelectedEntities())),selectedPoints=()=>links.flatMap((link=>link.getPoints().flatMap((point=>point.getSelectedEntities()))));if(isEmptyArray(filters))items.push(...selectedNodes(),...selectedPorts(),...selectedLinks(),...selectedPoints());else{const byType={node:selectedNodes,port:selectedPorts,link:selectedLinks,point:selectedPoints};for(const type of filters)items.push(...byType[type]())}return function unique(arr){return[...new Set(arr)]}(items)}addAll(...models){const links=[],nodes=[];for(const model of models)model instanceof LinkModel?links.push(model):model instanceof NodeModel&&nodes.push(model);return this.addLinks(links),this.addNodes(nodes),models}addLinks(links){this.links$.addMany(links)}addNodes(nodes){this.nodes$.addMany(nodes)}destroy(){super.destroy(),this.nodes$.destroy(),this.links$.destroy()}}class PortModel extends BaseModel{constructor(options={}){var _a,_b,_c,_d,_e;super(Object.assign({type:"port",logPrefix:"[Port]"},options)),this.coords$=createValueState(null!==(_a=options.coords)&&void 0!==_a?_a:{x:0,y:0},this.entityPipe("coords")),this.maximumLinks$=createValueState(null!==(_b=options.maximumLinks)&&void 0!==_b?_b:null,this.entityPipe("maximumLinks")),this.linkNamespace$=createValueState(null!==(_c=options.linkNamespace)&&void 0!==_c?_c:"default",this.entityPipe("linkName")),this.magnetic$=createValueState(!0,this.entityPipe("magnetic")),this.dimensions$=createValueState(null!==(_d=options.dimensions)&&void 0!==_d?_d:{width:0,height:0},this.entityPipe("dimensions")),this.canCreateLinks$=createValueState(null===(_e=options.canCreateLinks)||void 0===_e||_e,this.entityPipe("canCreateLinks")),this.links$=createEntityState([],this.entityPipe("links"))}link(port){if(this.getCanCreateLinks()){const link=new LinkModel({namespace:this.getLinkNamespace()});return link.setSourcePort(this),link.setTargetPort(port),link}return null}getNode(){return this.getParent()}getCanCreateLinks(){const numberOfLinks=this.getLinks().size;return!(this.maximumLinks$.value&&numberOfLinks>=this.maximumLinks$.value)&&this.canCreateLinks$.value}selectCoordsAndDimensions(){return(0,combineLatest.a)([this.selectCoords(),this.selectDimensions()]).pipe((0,map.U)((([coords,dim])=>Object.assign(Object.assign({},coords),dim))))}selectCanCreateLinks(){return this.canCreateLinks$.value$}setCanCreateLinks(value){this.canCreateLinks$.set(value)}getMagnetic(){return this.magnetic$.value}selectMagnetic(){return this.magnetic$.value$}setMagnetic(magnetic){this.magnetic$.set(magnetic)}selectCoords(){return this.coords$.value$}getCoords(){return this.coords$.value}setDimensions(dimensions){return this.dimensions$.set(dimensions)}getDimensions(){return this.dimensions$.value}selectDimensions(){return this.dimensions$.select()}getMaximumLinks(){return this.maximumLinks$.value}setMaximumLinks(maximumLinks){this.maximumLinks$.set(null!=maximumLinks?maximumLinks:null)}getLinkNamespace(){return this.linkNamespace$.value}setLinkNamespace(type){this.linkNamespace$.set(type)}removeLink(linkOrId){if(linkOrId){const linkId=function isString(val){return"string"==typeof val}(linkOrId)?linkOrId:null==linkOrId?void 0:linkOrId.id;this.links$.remove(linkId,!1)}}addLink(link){this.links$.add(link)}getLinks(){return this.links$.value}getLinksArray(){return this.links$.array()}selectLinks(){return this.links$.value$}updateCoords({x,y,width,height},engine){this.coords$.set({x,y}),this.dimensions$.set({width,height}),engine?this.getLinksArray().forEach((link=>{const relCoords=engine.getCanvasManager().getPortCenter(this),point=link.getPointForPort(this);point&&point.setCoords(Object.assign({},relCoords))})):this.log("Couldn't find DiagramEngine when updating coords. skipping")}canLinkToPort(port){return!0}isLocked(){return super.getLocked()}createLinkModel(){if(this.getCanCreateLinks())return new LinkModel({parent:this.getParent().getParent(),namespace:this.getLinkNamespace()})}destroy(){super.destroy(),this.links$.clear()}}class LabelModel extends BaseModel{constructor(options={}){var _a,_b,_c;super(Object.assign({type:"label"},options)),this.coords$=createValueState(null!==(_a=options.coords)&&void 0!==_a?_a:{x:0,y:0},this.entityPipe("coords")),this.rotation$=createValueState(null!==(_b=options.rotation)&&void 0!==_b?_b:0,this.entityPipe("rotation")),this.text$=createValueState(null!==(_c=options.text)&&void 0!==_c?_c:null,this.entityPipe("text"))}getRotation(){return this.rotation$.value}getCoords(){return this.coords$.value}destroy(){super.destroy()}setRotation(angle){this.rotation$.set(angle)}selectRotation(){return this.rotation$.value$}setCoords(newCoords){this.coords$.set(Object.assign(Object.assign({},this.coords$.value),newCoords))}selectCoords(){return this.coords$.value$}setText(text){this.text$.set(text)}getText(){return this.text$.value}selectText(){return this.text$.value$}}var race=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/race.js"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),share=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/share.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js");class DropAction extends BaseAction{constructor(event,selection=[]){super(),this.mouseEvent=event,this.selection=selection}}class MouseManager{constructor(_diagramEngine){this._diagramEngine=_diagramEngine,this.minValidZoom=1,this.engine=_diagramEngine}get diagramModel(){return this.engine.getDiagramModel()}get canvasManager(){return this.engine.getCanvasManager()}get actionsManager(){return this.engine.getActionsManager()}getElement(event){var _a,_b,_c,_d,_e,_f;const target=event.target;let element=target.closest('[data-type="port"]');const nodeEl=target.closest('[data-type="node"]');return element&&nodeEl?{model:null===(_b=null===(_a=this.diagramModel)||void 0===_a?void 0:_a.getNode(nodeEl.getAttribute("data-id")))||void 0===_b?void 0:_b.getPort(element.getAttribute("data-id")),element}:(element=target.closest('[data-type="point"]'),element?{model:null===(_d=null===(_c=this.diagramModel)||void 0===_c?void 0:_c.getLink(element.getAttribute("data-parent-id")))||void 0===_d?void 0:_d.getPointModel(element.getAttribute("data-id")),element}:(element=target.closest('[data-type="link"]'),element?{model:null===(_e=this.diagramModel)||void 0===_e?void 0:_e.getLink(element.getAttribute("data-id")),element}:(element=target.closest('[data-type="node"]'),element?{model:null===(_f=this.diagramModel)||void 0===_f?void 0:_f.getNode(element.getAttribute("data-id")),element}:null)))}onMouseMove(event){var _a;const action=null===(_a=this.actionsManager.getCurrentAction())||void 0===_a?void 0:_a.action;if(null!=action)if(action instanceof SelectingAction){const relative=this.canvasManager.getRelativePoint(event.clientX,event.clientY);this.diagramModel.getNodes().forEach((node=>{const nodeRectPoints=this.canvasManager.getNodeRectPoints(node);nodeRectPoints&&(action.containsElement(nodeRectPoints.topLeft,nodeRectPoints.bottomRight,this.diagramModel)?node.setSelected():node.setSelected(!1))})),this.diagramModel.getLinks().forEach((link=>{let allSelected=!0;link.getPoints().forEach((point=>{const pointPort=point.getParent().getPortForPoint(point),pointCoords=point.getCoords();action.containsElement(pointCoords,pointCoords,this.diagramModel)&&!pointPort?point.setSelected():(point.setSelected(!1),allSelected=!1)})),allSelected&&link.setSelected()})),action.mouseX2=relative.x,action.mouseY2=relative.y,this.actionsManager.fireAction()}else if(action instanceof MoveItemsAction){const coords={x:event.clientX-action.mouseX,y:event.clientY-action.mouseY},zoomLevel=this.diagramModel.getZoomLevel()/100;action.selectionModels.forEach((selectionModel=>{if(selectionModel.magnet=void 0,selectionModel.model instanceof NodeModel||selectionModel.model instanceof PointModel&&!selectionModel.model.isConnectedToPort()){const newCoords={x:selectionModel.initialX+coords.x/zoomLevel,y:selectionModel.initialY+coords.y/zoomLevel},gridRelativeCoords=this.diagramModel.getGridPosition(newCoords);if(selectionModel.model instanceof PointModel&&!isNil(this.diagramModel.getPortMagneticRadius())){const portsMap=this.diagramModel.getAllPorts({filter:p=>p.getMagnetic()});for(const port of portsMap.values()){const portCoords=port.getCoords();if(Math.hypot(portCoords.x-newCoords.x,portCoords.y-newCoords.y)<=this.diagramModel.getPortMagneticRadius()){const portCenter=this.canvasManager.getPortCenter(port);if(!portCenter)return;return selectionModel.model.setCoords(portCenter),void(selectionModel.magnet=port)}}}selectionModel.model.setCoords(gridRelativeCoords),selectionModel.model instanceof NodeModel&&selectionModel.model.getPorts().forEach((port=>{const portCoords=this.canvasManager.getPortCoords(port);portCoords&&port.updateCoords(portCoords,this.engine)}))}else if(selectionModel.model instanceof PointModel){const newCoords=this.diagramModel.getGridPosition({x:coords.x/zoomLevel,y:coords.y/zoomLevel});selectionModel.model.setCoords({x:selectionModel.initialX+newCoords.x,y:selectionModel.initialY+newCoords.y})}})),this.actionsManager.fireAction()}else action instanceof MoveCanvasAction&&this.diagramModel.getAllowCanvasTranslation()&&(this.diagramModel.setOffset(action.initialOffsetX+(event.clientX-action.mouseX),action.initialOffsetY+(event.clientY-action.mouseY)),this.actionsManager.fireAction())}onMouseDown(event){var _a,_b;if(3===event.button)return;const selectedModel=this.getElement(event);if(null===selectedModel)if(event.shiftKey){const relative=this.canvasManager.getRelativePoint(event.clientX,event.clientY),selectionAction=new SelectingAction(relative.x,relative.y);this.actionsManager.startFiringAction(selectionAction)}else this.diagramModel.clearSelection(),this.actionsManager.startFiringAction(new MoveCanvasAction(event.clientX,event.clientY,this.diagramModel));else if(selectedModel.model instanceof PortModel)if(!selectedModel.model.isLocked()&&selectedModel.model.getCanCreateLinks()){const relative=this.canvasManager.getZoomAwareRelativePoint(event),sourcePort=selectedModel.model,link=sourcePort.createLinkModel();link&&(link.setSourcePort(sourcePort),link.removeMiddlePoints(),link.getSourcePort()!==sourcePort&&link.setSourcePort(sourcePort),link.setTargetPort(null),link.getFirstPoint().setCoords(relative),link.getLastPoint().setCoords(relative),this.diagramModel.clearSelection(),link.getLastPoint().setSelected(),this.diagramModel.addLink(link),this.actionsManager.startFiringAction(new MoveItemsAction(event.clientX,event.clientY,this.engine)))}else this.diagramModel.clearSelection();else selectedModel.model instanceof PointModel&&selectedModel.model.isConnectedToPort()?this.diagramModel.clearSelection():(event.shiftKey||(null===(_a=selectedModel.model)||void 0===_a?void 0:_a.getSelected())||this.diagramModel.clearSelection(),null===(_b=selectedModel.model)||void 0===_b||_b.setSelected(),this.actionsManager.startFiringAction(new MoveItemsAction(event.clientX,event.clientY,this.engine)));this.createMouseListeners()}onMouseUp(event){var _a;const action=null===(_a=this.actionsManager.getCurrentAction())||void 0===_a?void 0:_a.action;if(action instanceof MoveItemsAction){const element=this.getElement(event);action.selectionModels.forEach((model=>{if(!(model&&model.model instanceof PointModel))return;let el=null;if(model.magnet?el=model.magnet:element&&element.model&&(el=element.model),el instanceof PortModel&&!this.engine.isModelLocked(el)){const link=model.model.getLink();if(isNil(null==link?void 0:link.getTargetPort())){null==link||link.setTargetPort(el);const targetPort=null==link?void 0:link.getTargetPort(),srcPort=null==link?void 0:link.getSourcePort();(null==targetPort?void 0:targetPort.id)!==(null==srcPort?void 0:srcPort.id)&&(null==srcPort?void 0:srcPort.canLinkToPort(targetPort))&&this.actionsManager.startFiringAction(new LinkCreatedAction(link))}else if((null==link?void 0:link.getTargetPort())!==el&&(null==link?void 0:link.getSourcePort())!==el){const targetPort=null==link?void 0:link.getTargetPort(),newLink=null==link?void 0:link.clone({});null==newLink||newLink.setSourcePort(el),null==newLink||newLink.setTargetPort(targetPort),null==link||link.setTargetPort(el),null==targetPort||targetPort.removeLink(link);const idx=null==link?void 0:link.getPointIndex(model.model);!isNil(idx)&&(null==newLink||newLink.removePointsBefore(null==newLink?void 0:newLink.getPoints()[idx])),null==link||link.removePointsAfter(model.model),this.diagramModel.addLink(newLink)}else link.getTargetPort()===el?link.removePointsAfter(model.model):link.getSourcePort()===el&&link.removePointsBefore(model.model)}model.magnet=void 0})),this.diagramModel.getAllowLooseLinks()||action.selectionModels.forEach((model=>{if(!(model&&model.model instanceof PointModel))return;const link=model.model.getLink();null!==(null==link?void 0:link.getSourcePort())&&null!==(null==link?void 0:link.getTargetPort())||(this.diagramModel.deleteLink(link),this.actionsManager.startFiringAction(new LooseLinkDestroyed(link)))})),action.selectionModels.forEach((model=>{if(!(model&&model.model instanceof PointModel))return;const link=model.model.getLink(),sourcePort=null==link?void 0:link.getSourcePort(),targetPort=null==link?void 0:link.getTargetPort();link&&sourcePort&&targetPort&&(sourcePort.canLinkToPort(targetPort)?targetPort.getLinksArray().some((someLink=>link!==someLink&&(someLink.getSourcePort()===sourcePort||someLink.getTargetPort()===sourcePort)))&&this.diagramModel.deleteLink(link):(link&&this.diagramModel.deleteLink(link),this.actionsManager.startFiringAction(new InvalidLinkDestroyed(link))))})),this.actionsManager.stopFiringAction(),this.actionsManager.startFiringAction(new DropAction(event,action.selectionModels)),this.actionsManager.stopFiringAction()}else this.actionsManager.stopFiringAction()}onMouseWheel(event){if(!this.diagramModel.getAllowCanvasZoom())return;event.preventDefault(),event.stopPropagation();const currentZoomLevel=this.diagramModel.getZoomLevel(),oldZoomFactor=currentZoomLevel/100;let scrollDelta=this.diagramModel.getInverseZoom()?-event.deltaY:event.deltaY;if(event.ctrlKey&&scrollDelta%1!=0?scrollDelta/=3:scrollDelta/=60,currentZoomLevel+scrollDelta>=this.minValidZoom){const newZoomLvl=currentZoomLevel+scrollDelta;this.diagramModel.setZoomLevel(newZoomLvl)}const zoomFactor=this.diagramModel.getZoomLevel()/100,boundingRect=event.currentTarget.getBoundingClientRect(),clientWidth=boundingRect.width,clientHeight=boundingRect.height,widthDiff=clientWidth*zoomFactor-clientWidth*oldZoomFactor,heightDiff=clientHeight*zoomFactor-clientHeight*oldZoomFactor,clientX=event.clientX-boundingRect.left,clientY=event.clientY-boundingRect.top,xFactor=(clientX-this.diagramModel.getOffsetX())/oldZoomFactor/clientWidth,yFactor=(clientY-this.diagramModel.getOffsetY())/oldZoomFactor/clientHeight,updatedXOffset=this.diagramModel.getOffsetX()-widthDiff*xFactor,updatedYOffset=this.diagramModel.getOffsetY()-heightDiff*yFactor;this.diagramModel.setOffset(updatedXOffset,updatedYOffset)}createMouseListeners(){const mouseUp$=(0,race.S)([(0,fromEvent.R)(document,"mouseup"),(0,fromEvent.R)(document,"contextmenu")]).pipe((0,tap.b)((e=>this.onMouseUp(e))),(0,share.B)(),(0,take.q)(1)),mouseMove$=(0,fromEvent.R)(document,"mousemove").pipe((0,tap.b)((e=>this.onMouseMove(e))),(0,takeUntil.R)(mouseUp$));(0,merge.T)(mouseMove$,mouseUp$).pipe((0,takeUntil.R)(this.diagramModel.onEntityDestroy())).subscribe()}}class CopyAction extends BaseAction{constructor(diagramEngine){super();this.copiedModels=diagramEngine.getDiagramModel().getSelectedItems().filter((item=>!diagramEngine.isModelLocked(item)))}}class DeleteKeyPressedAction extends BaseAction{constructor(diagramEngine,event){super(),this.deletedModels=[];this.deletedModels=diagramEngine.getDiagramModel().getSelectedItems().filter((item=>!diagramEngine.isModelLocked(item)))}}class PasteAction extends BaseAction{constructor(copiedModels){super(),this.clipboardData=copiedModels}}class KeyboardManager{constructor(_diagramEngine){this.engine=_diagramEngine,this.clipboard$=new BehaviorSubject.X([])}get actionsManager(){return this.engine.getActionsManager()}onKeyUp(event){this.handleDeleteKeyPressed(event)}handleDeleteKeyPressed(event){const options=this.engine.getDiagramModel().getKeyBindings().delete,keyCodes=(null==options?void 0:options.keyCodes)||[46,8],modifiers=Object.assign({ctrlKey:!1,shiftKey:!1,altKey:!1,metaKey:!1},null==options?void 0:options.modifiers);if(-1!==keyCodes.indexOf(event.keyCode)&&event.ctrlKey===modifiers.ctrlKey&&event.shiftKey===modifiers.shiftKey&&event.altKey===modifiers.altKey&&event.metaKey===modifiers.metaKey){const deleteKeyPressedAction=new DeleteKeyPressedAction(this.engine,event);this.actionsManager.startFiringAction(deleteKeyPressedAction),this.actionsManager.fireAction(),this.actionsManager.stopFiringAction()}}onCopy(){const copyAction=new CopyAction(this.engine);this.clipboard$.next(copyAction.copiedModels),this.actionsManager.startFiringAction(copyAction),this.actionsManager.fireAction(),this.actionsManager.stopFiringAction()}onPaste(){const pasteAction=new PasteAction(this.clipboard$.getValue());this.actionsManager.startFiringAction(pasteAction),this.actionsManager.fireAction(),this.actionsManager.stopFiringAction()}dispose(){this.clipboard$.complete()}}class ActionsManager{constructor(){this.actionsBus$=createValueState(null)}fireAction(){var _a;const action=null===(_a=this.actionsBus$.value)||void 0===_a?void 0:_a.action;if(action)return this.actionsBus$.set({action,state:"firing"}),action}stopFiringAction(){var _a;const stoppedAction=null===(_a=this.actionsBus$.value)||void 0===_a?void 0:_a.action;if(stoppedAction)return this.actionsBus$.set({action:stoppedAction,state:"stopped"}),stoppedAction}startFiringAction(action){return this.actionsBus$.set({action,state:"started"}),action}observeActions(){return this.actionsBus$.select()}getCurrentAction(){return this.actionsBus$.value}}var firstValueFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),switchMapTo=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js"),pluck=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/pluck.js");class CanvasManager{constructor(_diagramEngine,_canvas){this._diagramEngine=_diagramEngine,this._canvas=_canvas,this.canvas$=createValueState(_canvas||null),this.engine=_diagramEngine}getNodeDimensions(node){const nodeElement=this.getModelElement(node);if(!nodeElement)return null;const nodeRect=nodeElement.getBoundingClientRect();return{width:nodeRect.width,height:nodeRect.height}}getRelativePoint(x,y){const canvasRect=this.getCanvas().getBoundingClientRect();return{x:x-canvasRect.left,y:y-canvasRect.top}}getZoomAwareRelativePoint(event){const point=this.getRelativePoint(event.clientX,event.clientY);return{x:(point.x-this.engine.getDiagramModel().getOffsetX())/(this.engine.getDiagramModel().getZoomLevel()/100),y:(point.y-this.engine.getDiagramModel().getOffsetY())/(this.engine.getDiagramModel().getZoomLevel()/100)}}getModelElement(model){const selector=this.getCanvas().querySelector(`[data-type="${model.type}"][data-id="${model.id}"]`);if(null===selector)throw new Error(`Cannot find [${model.type}] element with id [${model.id}]`);return selector}getPortCenter(port){const sourceElement=this.getModelElement(port),diagramModel=this.engine.getDiagramModel();if(!sourceElement||!diagramModel)return null;const sourceRect=sourceElement.getBoundingClientRect(),rel=this.getRelativePoint(sourceRect.left,sourceRect.top);return rel?{x:sourceElement.offsetWidth/2+(rel.x-diagramModel.getOffsetX())/(diagramModel.getZoomLevel()/100),y:sourceElement.offsetHeight/2+(rel.y-diagramModel.getOffsetY())/(diagramModel.getZoomLevel()/100)}:null}setCanvas(canvas){this.canvas$.set(canvas)}getCanvas(){if(!this.canvas$.value)throw new Error("[RxZu] No canvas found, please use `setCanvas` to assign one.");return this.canvas$.value}selectCanvas(){return this.canvas$.select()}setObservers(widget,model){const observers=[],element=this.engine.getFactory().getHTMLElement(widget);if(model instanceof NodeModel||model instanceof PortModel){const resizeObserver=new ResizeObserver((entries=>{if((null==entries?void 0:entries.length)>0){const{width,height}=entries[0].contentRect;if(width&&height&&(model.setDimensions({width,height}),model instanceof PortModel)){const coords=this.getPortCoords(model);coords&&model.updateCoords(coords)}}}));resizeObserver.observe(element),observers.push(resizeObserver)}return observers}paintNodes(nodesHost,promise=!1){const diagramModel=this.engine.getDiagramModel(),observable=diagramModel.selectNodes().pipe((0,takeUntil.R)(diagramModel.onEntityDestroy()),(0,switchMap.w)((nodes=>{const nodesPainted$=[];for(const node of nodes.values())node.getPainted().isPainted||(node.setParent(diagramModel),nodesPainted$.push(this.paintModel(node,nodesHost)));return(0,combineLatest.a)(nodesPainted$)})),(0,filter.h)((val=>null!==val)),(0,map.U)((()=>!0)),(0,catchError.K)((err=>(console.error(err),(0,of.of)(!0)))));return promise?(0,firstValueFrom.z)(observable):observable}paintLinks(linksHost,promise=!1){const diagramModel=this.engine.getDiagramModel(),observable=diagramModel.selectLinks().pipe((0,takeUntil.R)(diagramModel.onEntityDestroy()),(0,switchMap.w)((links=>{const linksPainted$=[];for(const link of Array.from(links.values())){if(link.getPainted().isPainted)continue;const srcPort=link.getSourcePort(),targetPort=link.getTargetPort();if(srcPort){const portCenter=this.getPortCenter(srcPort);portCenter&&link.getPoints()[0].setCoords(portCenter)}if(targetPort){const portCenter=this.getPortCenter(targetPort);portCenter&&link.getPoints()[link.getPoints().length-1].setCoords(portCenter)}linksPainted$.push(this.paintModel(link,linksHost).pipe((0,switchMapTo.c)(link.selectLabel().pipe((0,filter.h)((label=>null!=label)),(0,switchMap.w)((label=>this.paintLabel(label,linksHost)))))))}return(0,combineLatest.a)(linksPainted$).pipe((0,switchMapTo.c)((0,of.of)()))})),(0,catchError.K)((err=>(console.error(err),(0,of.of)()))));return promise?observable.toPromise():observable}paintLabel(label,host){return this.paintModel(label,host)}paintModel(model,host,promise=!1){const toPromise=obs=>promise?(0,firstValueFrom.z)(obs):obs,factory=this.engine.getFactory(),diagramModel=this.engine.getDiagramModel(),widget=factory.generateWidget({model,host,diagramModel});if(!widget)return toPromise((0,of.of)(!0));const element=factory.getHTMLElement(widget);this.setBaseAttributes(element,model),this.subscribeToModelChanges(element,model);const observers=this.setObservers(widget,model);return model.onEntityDestroy().subscribe((()=>{this.engine.getFactory().destroyWidget(widget),observers.forEach((observer=>observer.disconnect()))})),toPromise(model.paintChanges().pipe((0,pluck.j)("isPainted"),(0,take.q)(1)))}subscribeToModelChanges(element,model){model instanceof NodeModel&&model.selectCoords().pipe((0,takeUntil.R)(model.onEntityDestroy())).subscribe((({x,y})=>{element.style.setProperty("left",`${x}px`),element.style.setProperty("top",`${y}px`)}))}setBaseAttributes(element,model){var _a;element.setAttribute("data-type",model.type),element.setAttribute("data-id",model.id),element.setAttribute("data-parent-id",null===(_a=model.getParent())||void 0===_a?void 0:_a.id),element.setAttribute("data-namespace",model.namespace)}shouldDrawSelectionBox(){const actions=this.engine.getActionsManager().getCurrentAction();return actions instanceof SelectingAction&&actions.getBoxDimensions()}getPortCoords(port){const sourceElement=this.getModelElement(port),canvas=this.getCanvas(),diagramModel=this.engine.getDiagramModel();if(!sourceElement||!canvas||!diagramModel)return null;const sourceRect=sourceElement.getBoundingClientRect(),canvasRect=canvas.getBoundingClientRect();return{x:(sourceRect.x-diagramModel.getOffsetX())/(diagramModel.getZoomLevel()/100)-canvasRect.left,y:(sourceRect.y-diagramModel.getOffsetY())/(diagramModel.getZoomLevel()/100)-canvasRect.top,width:sourceRect.width,height:sourceRect.height}}getNodeCoords(node){const sourceElement=this.getModelElement(node),canvas=this.getCanvas(),diagramModel=this.engine.getDiagramModel();if(!sourceElement||!canvas||!diagramModel)return null;const sourceRect=sourceElement.getBoundingClientRect(),canvasRect=canvas.getBoundingClientRect();return{x:(sourceRect.x-diagramModel.getOffsetX())/(diagramModel.getZoomLevel()/100)-canvasRect.left,y:(sourceRect.y-diagramModel.getOffsetY())/(diagramModel.getZoomLevel()/100)-canvasRect.top,width:sourceRect.width,height:sourceRect.height}}getNodeCenter(node){const sourceElement=this.getModelElement(node),diagramModel=this.engine.getDiagramModel();if(!sourceElement||!diagramModel)return null;const sourceRect=sourceElement.getBoundingClientRect(),rel=this.getRelativePoint(sourceRect.left,sourceRect.top);return rel?{x:sourceElement.offsetWidth/2+(rel.x-diagramModel.getOffsetX())/(diagramModel.getZoomLevel()/100),y:sourceElement.offsetHeight/2+(rel.y-diagramModel.getOffsetY())/(diagramModel.getZoomLevel()/100)}:null}getNodeRectPoints(node){if(!node)return void console.warn("[RxZu] No input node were found");const width=node.getWidth(),height=node.getHeight(),{x,y}=node.getCoords();return{topLeft:{x,y},topRight:{x:x+width,y},bottomLeft:{x,y:y+height},bottomRight:{x:x+width,y:y+height}}}getNodeLayersRect(nodes,margin=0){if(!nodes||0===nodes.length)return console.warn("[RxZu] No input nodes were found"),{width:0,height:0,top:0,left:0};const firstNode=nodes[0],{x:firstNodeXCoords,y:firstNodeYCoords}=firstNode.getCoords();let rightNodeWidth=firstNode.getWidth(),bottomNodeHeight=firstNode.getHeight(),minX=firstNodeXCoords,maxX=firstNodeXCoords,minY=firstNodeYCoords,maxY=firstNodeYCoords;return nodes.forEach((node=>{const{x,y}=node.getCoords(),nodeElement=this.getModelElement(node),{clientWidth,clientHeight}=nodeElement;x<minX&&(minX=x),y<minY&&(minY=y),x+clientWidth>maxX+rightNodeWidth&&(maxX=x,rightNodeWidth=clientWidth),y+clientHeight>maxY+bottomNodeHeight&&(maxY=y,bottomNodeHeight=clientHeight)})),{width:maxX-minX+rightNodeWidth+2*margin,height:maxY-minY+bottomNodeHeight+2*margin,top:minY-margin,left:minX-margin}}}var dagre=__webpack_require__("./node_modules/dagre/index.js");class DagrePlugin{instantiate(){try{this.g=new dagre.graphlib.Graph({multigraph:!0})}catch(error){console.warn("`dagre` packages isn't installed, please install it before using the DagreEngine plugin")}}redistribute(model,options={}){this.instantiate(),this.g.setGraph(options.graph||{}),this.g.setDefaultEdgeLabel((()=>({})));const processedlinks={};model.getNodes().forEach((node=>{this.g.setNode(node.id,{width:node.getWidth(),height:node.getHeight()})})),model.getLinks().forEach((link=>{var _a,_b,_c,_d;if(link.getSourcePort()&&link.getTargetPort()){processedlinks[link.id]=!0;const v=null===(_b=null===(_a=link.getSourcePort())||void 0===_a?void 0:_a.getNode())||void 0===_b?void 0:_b.id,w=null===(_d=null===(_c=link.getTargetPort())||void 0===_c?void 0:_c.getNode())||void 0===_d?void 0:_d.id;v&&w&&this.g.setEdge({v,w,name:link.id})}})),(0,dagre.layout)(this.g,options.layout),this.g.nodes().forEach((v=>{var _a;const{x,y,width,height}=this.g.node(v);null===(_a=model.getNode(v))||void 0===_a||_a.setCoords({x:x-width/2,y:y-height/2})})),options.includeLinks&&this.g.edges().forEach((e=>{const edge=this.g.edge(e),link=model.getLink(e.name);if(link){const points=[null==link?void 0:link.getFirstPoint()];for(let i=1;i<edge.points.length-2;i++)points.push(new PointModel({parent:link,coords:{x:edge.points[i].x,y:edge.points[i].y}}));null==link||link.setPoints(points.concat(null==link?void 0:link.getLastPoint()))}}))}}var delay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js");function OutsideZone(targetClass,functionName,descriptor){const source=descriptor.value;return descriptor.value=function(...data){if(!this.ngZone)throw new Error("Class with 'OutsideZone' decorator should have 'ngZone' class property with 'NgZone' class.");return this.ngZone.runOutsideAngular((()=>source.call(this,...data)))},descriptor}class TemplateVarContext{}let TemplateVarDirective=class TemplateVarDirective{constructor(vcRef,templateRef){this.vcRef=vcRef,this.templateRef=templateRef,this.view=null,this.context=new TemplateVarContext}set templateVar(context){this.context.$implicit=this.context.templateVar=context,this.updateView()}updateView(){this.view?this.view.markForCheck():(this.vcRef.clear(),this.view=this.vcRef.createEmbeddedView(this.templateRef,this.context))}};var RegistryService_1;TemplateVarDirective.ctorParameters=()=>[{type:core.ViewContainerRef},{type:core.TemplateRef}],TemplateVarDirective.propDecorators={templateVar:[{type:core.Input}]},TemplateVarDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[templateVar]"}),(0,tslib_es6.w6)("design:paramtypes",[core.ViewContainerRef,core.TemplateRef])],TemplateVarDirective);let RegistryService=RegistryService_1=class RegistryService extends class AbstractRegistry{constructor(parent){this._registry=new Map,this._parent=parent}get(key){var _a;return this._registry.get(key)||(null===(_a=this._parent)||void 0===_a?void 0:_a.get(key))}has(key){var _a;return this._registry.has(key)||!!(null===(_a=this._parent)||void 0===_a?void 0:_a.has(key))}set(key,component){this._registry.set(key,component)}clear(){this._registry.clear()}delete(key){this._registry.delete(key)}}{constructor(parent){super(parent)}};RegistryService.ctorParameters=()=>[{type:RegistryService,decorators:[{type:core.Optional},{type:core.SkipSelf},{type:core.Inject,args:[RegistryService_1]}]}],RegistryService=RegistryService_1=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"}),(0,tslib_es6.w6)("design:paramtypes",[RegistryService])],RegistryService);const MODEL=new core.InjectionToken("MODEL"),COMPONENT=new core.InjectionToken("COMPONENT"),DIAGRAM_DEFAULT_OPTIONS=new core.InjectionToken("DIAGRAM_DEFAULT_OPTIONS",{providedIn:"root",factory:function(){return{allowCanvasZoom:!0,allowCanvasTranslation:!0,inverseZoom:!0,allowLooseLinks:!0,maxZoomOut:0,maxZoomIn:0,portMagneticRadius:30}}});let FactoryService=class FactoryService extends class AbstractFactory{constructor(registry){this._registry=registry,this._beforeGenerate$=new Subject.x,this._afterGenerate$=new Subject.x}detectChanges(widget){(0,noop.Z)()}beforeGenerate(){return this._beforeGenerate$.asObservable()}afterGenerate(){return this._afterGenerate$.asObservable()}has(model){return this._registry.has(toRegistryKey(model.type,model.namespace))}generateWidget(options){if(!this.resolveComponent)throw new Error("resolveComponent is not implemented");if(options.model.getPainted().isPainted)return null;this._beforeGenerate$.next();const widget=this.resolveComponent(options);return this._afterGenerate$.next(widget),this.detectChanges(widget),widget}get(model){return this._registry.get(toRegistryKey(model.type,model.namespace))}}{constructor(registry,cfr){super(registry),this.cfr=cfr}getHTMLElement(widget){return widget.location.nativeElement}destroyWidget(widget){widget.destroy()}detectChanges(widget){widget.changeDetectorRef.detectChanges()}resolveComponent({model,host,index}){const cmp=this.get(model);if(!cmp)throw new Error(`[RxZu] Couldn't find component for ${toRegistryKey(model.type,model.namespace)}`);const injector=core.Injector.create({providers:[{provide:MODEL,useValue:model}],parent:host.injector});return host.createComponent(this.cfr.resolveComponentFactory(cmp),index,injector)}};FactoryService.ctorParameters=()=>[{type:RegistryService},{type:core.ComponentFactoryResolver}],FactoryService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[RegistryService,core.ComponentFactoryResolver])],FactoryService);let EngineService=class EngineService extends class DiagramEngine{constructor(factory,_canvas,_mouseManager,_keyboardManager,_actionsManager,_canvasManager){this.factory=factory,this._canvas=_canvas,this._mouseManager=_mouseManager,this._keyboardManager=_keyboardManager,this._actionsManager=_actionsManager,this._canvasManager=_canvasManager,this.actionsManager=_actionsManager||this.createActionsManager(),this.mouseManager=_mouseManager||this.createMouseManager(),this.keyboardManager=_keyboardManager||this.createKeyboardManager(),this.canvasManager=_canvasManager||this.createCanvasManager(_canvas)}setup({maxZoomIn,maxZoomOut,portMagneticRadius,allowLooseLinks,allowCanvasZoom,allowCanvasTranslation,inverseZoom,keyBindings}){const diagramModel=this.getDiagramModel();diagramModel.setAllowCanvasZoom(null==allowCanvasZoom||allowCanvasZoom),diagramModel.setAllowCanvasTranslation(null==allowCanvasTranslation||allowCanvasTranslation),diagramModel.setInverseZoom(null!=inverseZoom&&inverseZoom),diagramModel.setAllowLooseLinks(null==allowLooseLinks||allowLooseLinks),diagramModel.setPortMagneticRadius(null!=portMagneticRadius?portMagneticRadius:30),diagramModel.setMaxZoomIn(null!=maxZoomIn?maxZoomIn:0),diagramModel.setMaxZoomOut(null!=maxZoomOut?maxZoomOut:0),diagramModel.setKeyBindings(null!=keyBindings?keyBindings:{})}createMouseManager(){return this.mouseManager?(console.warn("[RxZu] Mouse Manager already initialized, bailing out."),this.mouseManager):new MouseManager(this)}createCanvasManager(canvas){return this.canvasManager?(console.warn("[RxZu] Mouse Manager already initialized, bailing out."),this.canvasManager):new CanvasManager(this,canvas)}createActionsManager(){return this.actionsManager?(console.warn("[RxZu] Actions Manager already initialized, bailing out."),this.actionsManager):new ActionsManager}createKeyboardManager(){return this.keyboardManager?(console.warn("[RxZu] Keyboard Manager already initialized, bailing out."),this.keyboardManager):new KeyboardManager(this)}setModel(model){if(this.diagramModel)throw new Error("diagram model already exists, please reset model prior to creating new diagram");return this.diagramModel=model,this.diagramModel.diagramEngine=this,this.diagramModel.onEntityDestroy().subscribe((()=>{this.diagramModel=void 0})),model}createModel(options){if(this.diagramModel)throw new Error("diagram model already exists, please reset model prior to creating new diagram");return this.diagramModel=new DiagramModel(options,this),this.diagramModel.onEntityDestroy().subscribe((()=>{this.diagramModel=void 0})),this.diagramModel}getMouseManager(){return this.mouseManager}getActionsManager(){return this.actionsManager}getKeyboardManager(){return this.keyboardManager}getCanvasManager(){return this.canvasManager}getDiagramModel(){if(!this.diagramModel)throw new Error("[RxZu] No model found, please create one and assign it to the engine.");return this.diagramModel}getFactory(){return this.factory}isModelLocked(model){return!!this.getDiagramModel().getLocked()||model.getLocked()}zoomToFit(margin=100){const diagramModel=this.getDiagramModel();if(diagramModel){const allNodes=diagramModel.getNodesArray();(null==allNodes?void 0:allNodes.length)>0&&this.zoomToNodes(allNodes,margin)}}zoomToNodes(nodes,margin=100){if(!nodes||0===nodes.length)return void console.warn("[RxZu] No input nodes were found");const diagramModel=this.getDiagramModel();diagramModel&&this.canvasManager.selectCanvas().pipe((0,filter.h)((canvas=>null!=canvas)),(0,take.q)(1),(0,delay.g)(0)).subscribe((canvas=>{const nodesLayersRect=this.canvasManager.getNodeLayersRect(nodes,margin),zoomFactor=this.calcZoomFactor(nodesLayersRect.width,nodesLayersRect.height);diagramModel.setZoomLevel(100*zoomFactor);const canvasRect=canvas.getBoundingClientRect(),canvasRelativeTopLeftPoint_top=diagramModel.getOffsetY()+canvasRect.top,canvasRelativeTopLeftPoint_left=diagramModel.getOffsetX()+canvasRect.left,nodesRectTopLeftPoint_top=canvasRelativeTopLeftPoint_top+nodesLayersRect.top*zoomFactor,nodesRectTopLeftPoint_left=canvasRelativeTopLeftPoint_left+nodesLayersRect.left*zoomFactor;diagramModel.setOffset(canvasRelativeTopLeftPoint_left-nodesRectTopLeftPoint_left,canvasRelativeTopLeftPoint_top-nodesRectTopLeftPoint_top)}))}fitToCenter(additionalZoom=0){const canvas=this.getCanvasManager().getCanvas(),model=this.diagramModel,canvasRect=canvas.getBoundingClientRect(),{height:nodesHeight,width:nodesWidth}=this.canvasManager.getNodeLayersRect(model.getNodesArray()),{height:canvasHeight,width:canvasWidth}=canvasRect,zoomFactor=this.calcZoomFactor(nodesWidth,nodesHeight)/1.15,withAdditional=this.coerceZoom(zoomFactor-additionalZoom,zoomFactor),x=(canvasWidth-nodesWidth*withAdditional)/2,y=(canvasHeight-nodesHeight*withAdditional)/2;model.setZoomLevel(100*withAdditional),model.setOffset(x,y)}calcZoomFactor(width,height){const canvas=this.getCanvasManager().getCanvas(),xFactor=canvas.clientWidth/width,yFactor=canvas.clientHeight/height;return Math.min(xFactor,yFactor)}coerceZoom(zoom,fallback){const maxZoomIn=this.diagramModel.getMaxZoomIn(),maxZoomOut=this.diagramModel.getMaxZoomOut();return maxZoomIn&&zoom>maxZoomIn?null!=fallback?fallback:maxZoomIn:maxZoomOut&&zoom<maxZoomOut?null!=fallback?fallback:maxZoomOut:zoom}}{constructor(resolver,rendererFactory,factory){super(factory),this.resolver=resolver,this.rendererFactory=rendererFactory,this.factory=factory,this._renderer=this.rendererFactory.createRenderer(null,null)}};EngineService.ctorParameters=()=>[{type:core.ComponentFactoryResolver},{type:core.RendererFactory2},{type:FactoryService}],EngineService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[core.ComponentFactoryResolver,core.RendererFactory2,FactoryService])],EngineService);let RxZuDiagramComponent=class RxZuDiagramComponent{constructor(diagramEngine,ngZone,renderer,cdRef,elRef,defaultOptions){this.diagramEngine=diagramEngine,this.ngZone=ngZone,this.renderer=renderer,this.cdRef=cdRef,this.elRef=elRef,this.defaultOptions=defaultOptions,this.mouseManager=this.diagramEngine.getMouseManager(),this.keyboardManager=this.diagramEngine.getKeyboardManager(),this.canvasManager=this.diagramEngine.getCanvasManager(),this.actionsManager=this.diagramEngine.getActionsManager()}get host(){return this.elRef.nativeElement}ngOnInit(){this.options=Object.assign(Object.assign({},this.defaultOptions),this.options),this.model=this.model&&this.diagramEngine.setModel(this.model)||this.diagramEngine.createModel(Object.assign({namespace:this.name||"default"},this.options)),this.canvas&&(this.canvasManager.setCanvas(this.canvas.nativeElement),this.diagramEngine.setup(Object.assign({},this.options)),this.initNodes(),this.initSelectionBox(),this.initSubs())}ngOnDestroy(){this.keyboardManager&&this.keyboardManager.dispose(),this.model.destroy()}zoomToFit(additionalZoomFactor){this.diagramEngine.zoomToFit(additionalZoomFactor)}zoomToNodes(nodes,margin=100){this.diagramEngine.zoomToNodes(nodes,margin)}initNodes(){this.canvasManager.paintNodes(this.nodesLayer).pipe((0,takeUntil.R)(this.model.onEntityDestroy()),(0,switchMap.w)((()=>this.diagramEngine?this.canvasManager.paintLinks(this.linksLayer):(0,of.of)(null)))).subscribe()}initSelectionBox(){this.diagramEngine&&(this.selectionBox$=this.actionsManager.observeActions().pipe((0,map.U)((a=>a&&a.action&&a.action instanceof SelectingAction&&"firing"===a.state?a.action:null)),(0,tap.b)((()=>this.cdRef.detectChanges()))))}onMouseUp(event){this.mouseManager?this.mouseManager.onMouseUp(event):(0,noop.Z)()}onKeyUp(event){this.keyboardManager?this.keyboardManager.onKeyUp(event):(0,noop.Z)()}onCopy(event){this.keyboardManager?this.keyboardManager.onCopy():(0,noop.Z)()}onPaste(event){this.keyboardManager?this.keyboardManager.onPaste():(0,noop.Z)()}onMouseMove(event){this.mouseManager?this.mouseManager.onMouseMove(event):(0,noop.Z)()}onMouseDown(event){this.mouseManager?this.mouseManager.onMouseDown(event):(0,noop.Z)()}onMouseWheel(event){this.mouseManager?this.mouseManager.onMouseWheel(event):(0,noop.Z)()}setLayerStyles(x,y,zoom){const nodesLayer=this.getNodesLayer(),linksLayer=this.getLinksLayer(),value=`translate(${x}px, ${y}px) scale(${zoom/100})`;this.renderer.setStyle(nodesLayer,"transform",value),this.renderer.setStyle(linksLayer,"transform",value)}initSubs(){var _a;const diagramModel=null===(_a=this.diagramEngine)||void 0===_a?void 0:_a.getDiagramModel();diagramModel&&(0,combineLatest.a)([diagramModel.selectOffsetX(),diagramModel.selectOffsetY(),diagramModel.selectZoomLevel()]).pipe((0,takeUntil.R)(this.model.onEntityDestroy()),(0,tap.b)((([x,y,zoom])=>this.setLayerStyles(x,y,zoom)))).subscribe()}getNodesLayer(){var _a;return this.host?null===(_a=this.nodesLayer)||void 0===_a?void 0:_a.element.nativeElement.parentElement:null}getLinksLayer(){var _a;return this.host?null===(_a=this.linksLayer)||void 0===_a?void 0:_a.element.nativeElement.parentElement:null}};RxZuDiagramComponent.ctorParameters=()=>[{type:EngineService},{type:core.NgZone},{type:core.Renderer2},{type:core.ChangeDetectorRef},{type:core.ElementRef},{type:void 0,decorators:[{type:core.Inject,args:[DIAGRAM_DEFAULT_OPTIONS]}]}],RxZuDiagramComponent.propDecorators={name:[{type:core.Input}],model:[{type:core.Input}],options:[{type:core.Input}],nodesLayer:[{type:core.ViewChild,args:["nodesLayer",{read:core.ViewContainerRef,static:!0}]}],linksLayer:[{type:core.ViewChild,args:["linksLayer",{read:core.ViewContainerRef,static:!0}]}],canvas:[{type:core.ViewChild,args:["canvas",{read:core.ElementRef,static:!0}]}],onCopy:[{type:core.HostListener,args:["window:copy",["$event"]]}],onPaste:[{type:core.HostListener,args:["window:paste",["$event"]]}]},(0,tslib_es6.gn)([OutsideZone,(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[MouseEvent]),(0,tslib_es6.w6)("design:returntype",void 0)],RxZuDiagramComponent.prototype,"onMouseUp",null),(0,tslib_es6.gn)([OutsideZone,(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[KeyboardEvent]),(0,tslib_es6.w6)("design:returntype",void 0)],RxZuDiagramComponent.prototype,"onKeyUp",null),(0,tslib_es6.gn)([OutsideZone,(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[MouseEvent]),(0,tslib_es6.w6)("design:returntype",void 0)],RxZuDiagramComponent.prototype,"onMouseMove",null),(0,tslib_es6.gn)([OutsideZone,(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[MouseEvent]),(0,tslib_es6.w6)("design:returntype",void 0)],RxZuDiagramComponent.prototype,"onMouseDown",null),(0,tslib_es6.gn)([OutsideZone,(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[WheelEvent]),(0,tslib_es6.w6)("design:returntype",void 0)],RxZuDiagramComponent.prototype,"onMouseWheel",null),(0,tslib_es6.gn)([OutsideZone,(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Number,Number,Number]),(0,tslib_es6.w6)("design:returntype",void 0)],RxZuDiagramComponent.prototype,"setLayerStyles",null),RxZuDiagramComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-diagram",exportAs:"RxzuDiagram",template:'<div\n  class="rxzu-diagram"\n  #canvas\n  (mousedown)="onMouseDown($event)"\n  (wheel)="onMouseWheel($event)"\n  (keyup)="onKeyUp($event)"\n  tabindex="1"\n>\n  \x3c!-- Nodes Layer --\x3e\n  <div class="rxzu-nodes-layer">\n    <ng-template #nodesLayer></ng-template>\n  </div>\n\n  \x3c!-- Links Layer --\x3e\n  <div class="rxzu-links-layer">\n    <ng-template #linksLayer></ng-template>\n  </div>\n\n  \x3c!-- Selection Box --\x3e\n  <div\n    *ngIf="selectionBox$ | async as selectionBox"\n    class="selector"\n    [ngStyle]="{\n      top: selectionBox?.dimensions?.top + \'px\',\n      left: selectionBox?.dimensions?.left + \'px\',\n      width: selectionBox?.dimensions?.width + \'px\',\n      height: selectionBox?.dimensions?.height + \'px\'\n    }"\n  ></div>\n</div>\n',providers:[EngineService,RegistryService,FactoryService],changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[".rxzu-diagram {\n  position: relative;\n  flex-grow: 1;\n  display: flex;\n  cursor: move;\n  overflow: hidden;\n}\n.rxzu-diagram:focus {\n  outline: none;\n}\n.rxzu-diagram .selector {\n  position: absolute;\n  background-color: rgba(0, 192, 255, 0.2);\n  border: solid 2px #00c0ff;\n}\n.rxzu-diagram .rxzu-nodes-layer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0 0;\n  overflow: visible;\n  pointer-events: none;\n  z-index: 150;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n.rxzu-diagram .rxzu-links-layer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0 0;\n  overflow: visible;\n  pointer-events: none;\n  z-index: 100;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[EngineService,core.NgZone,core.Renderer2,core.ChangeDetectorRef,core.ElementRef,Object])],RxZuDiagramComponent);var RxZuModule_1,common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");let RxZuModule=RxZuModule_1=class RxZuModule{constructor(registry,components){null==components||components.forEach((({type,namespace:name,component})=>registry.set(toRegistryKey(type,name),component)))}static registerComponent({type,namespace,component}){return{provide:COMPONENT,multi:!0,useValue:{type,namespace,component}}}static withComponents(components){return{ngModule:RxZuModule_1,providers:[...[].concat(components||[]).map(RxZuModule_1.registerComponent)]}}};RxZuModule.ctorParameters=()=>[{type:RegistryService},{type:Array,decorators:[{type:core.Inject,args:[COMPONENT]},{type:core.Optional}]}],RxZuModule=RxZuModule_1=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[RxZuDiagramComponent,TemplateVarDirective],imports:[common.ez],exports:[RxZuDiagramComponent]}),(0,tslib_es6.w6)("design:paramtypes",[RegistryService,Array])],RxZuModule);let DefaultLabelComponent=class DefaultLabelComponent{constructor(model,cdRef){this.model=model,this.cdRef=cdRef}ngOnInit(){this.model.selectCoords().subscribe((()=>{this.cdRef.detectChanges()})),this.model.setPainted(!0)}};DefaultLabelComponent.ctorParameters=()=>[{type:LabelModel,decorators:[{type:core.Inject,args:[MODEL]}]},{type:core.ChangeDetectorRef}],DefaultLabelComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-default-label",template:"<div\n  class=\"default-label\"\n  [ngStyle]=\"{\n    transform:\n      'translate(' +\n      (model.selectCoords() | async)?.x +\n      'px, ' +\n      (model.selectCoords() | async)?.y +\n      'px)' +\n      'rotate(' +\n      (model.selectRotation() | async) +\n      'deg)'\n  }\"\n>\n  {{ model.selectText() | async }}\n</div>\n",changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n}\n\n.default-label {\n  color: white;\n  -webkit-user-select: none;\n          user-select: none;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[LabelModel,core.ChangeDetectorRef])],DefaultLabelComponent);let DefaultLinkComponent=class DefaultLinkComponent{constructor(model,cdRef){this.model=model,this.cdRef=cdRef}ngOnInit(){this.model.setPainted(!0)}trackByPoints(i,point){return point.id}onHover(){this.cdRef.detectChanges()}ngAfterViewInit(){const firstPCoords$=this.model.getFirstPoint().selectCoords(),lastPCoords$=this.model.getLastPoint().selectCoords();(0,combineLatest.a)([firstPCoords$,lastPCoords$]).pipe((0,takeUntil.R)(this.model.onEntityDestroy())).subscribe((([firstPCoords,lastPCoords])=>{const points=[firstPCoords,lastPCoords],xOrY=Math.abs(firstPCoords.x-lastPCoords.x)>Math.abs(firstPCoords.y-lastPCoords.y)?"x":"y";let isStraight=!1;Math.abs(points[0][xOrY]-points[1][xOrY])<50&&(isStraight=!0);const path=function generateCurvePath(firstPoint,lastPoint,curvy=0){const isHorizontal=Math.abs(firstPoint.x-lastPoint.x)>Math.abs(firstPoint.y-lastPoint.y),curvyX=isHorizontal?curvy:0,curvyY=isHorizontal?0:curvy;return`M${firstPoint.x},${firstPoint.y} C ${firstPoint.x+curvyX},${firstPoint.y+curvyY}\n    ${lastPoint.x-curvyX},${lastPoint.y-curvyY} ${lastPoint.x},${lastPoint.y}`}(firstPCoords,lastPCoords,isStraight?0:50);this.model.setPath(path);const label=this.model.getLabel();label&&label.setCoords(this.calcCenterOfPath(firstPCoords,lastPCoords)),this.cdRef.detectChanges()}))}calcLabelIncline(firstPoint,secondPoint){const dy=secondPoint.y-firstPoint.y,dx=secondPoint.x-firstPoint.x;if(0===dx)return 0;let inclineAngel=180*Math.atan(dy/dx)/Math.PI;return inclineAngel<0&&(inclineAngel+=180),inclineAngel}calcCenterOfPath(firstPoint,secondPoint){return{x:(firstPoint.x+secondPoint.x)/2+20,y:(firstPoint.y+secondPoint.y)/2+20}}};DefaultLinkComponent.ctorParameters=()=>[{type:LinkModel,decorators:[{type:core.Inject,args:[MODEL]}]},{type:core.ChangeDetectorRef}],DefaultLinkComponent.propDecorators={labelLayer:[{type:core.ViewChild,args:["labelLayer",{read:core.ViewContainerRef,static:!0}]}]},DefaultLinkComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-default-link",template:'\x3c!-- Label Host --\x3e\n<ng-template #labelLayer></ng-template>\n\n<svg class="link-container">\n  \x3c!-- Link --\x3e\n  <g [id]="model.id">\n    <path\n      class="default-link"\n      stroke-width="1"\n      stroke="white"\n      [attr.d]="model.selectPath() | async"\n      (mouseleave)="model.setHovered(false); onHover()"\n      (mouseenter)="model.setHovered(); onHover()"\n      [ngClass]="{ hovered: model.selectHovered() | async }"\n    ></path>\n    <path\n      class="default-link"\n      stroke="blue"\n      stroke-linecap="round"\n      (mouseleave)="model.setHovered(false); onHover()"\n      (mouseenter)="model.setHovered(); onHover()"\n      [attr.stroke-width]="20"\n      [attr.data-type]="model.type"\n      [attr.data-id]="model.id"\n      [attr.stroke-opacity]="(model.selectHovered() | async) ? \'0.1\' : \'0\'"\n      [attr.d]="model.selectPath() | async"\n    ></path>\n  </g>\n\n  \x3c!-- Points --\x3e\n  <g\n    *ngFor="let point of model.getPoints(); trackBy: trackByPoints"\n    [id]="point.id"\n  >\n    <circle\n      fill="currentColor"\n      [attr.cx]="point.selectX() | async"\n      [attr.cy]="point.selectY() | async"\n      r="5"\n      class="default-point"\n      [ngClass]="{ hovered: point.selectHovered() | async }"\n    />\n    <circle\n      [attr.data-type]="point.type"\n      [attr.data-id]="point.id"\n      [attr.data-parent-id]="model.id"\n      (mouseleave)="point.setHovered(false); model.setHovered(false)"\n      (mouseenter)="point.setHovered(); model.setHovered()"\n      [attr.cx]="point.selectX() | async"\n      [attr.cy]="point.selectY() | async"\n      r="15"\n      [attr.opacity]="0"\n      [ngClass]="{ selected: point.selectSelected() | async }"\n    />\n  </g>\n</svg>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n}\n\n.link-container {\n  position: relative;\n  fill: none;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.default-link {\n  fill: none;\n  overflow: visible;\n}\n\n@keyframes dash {\n  from {\n    stroke-dashoffset: 24;\n  }\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n\n.default-link.hovered {\n  stroke: #00c0ff;\n  stroke-dasharray: 10, 2;\n  animation: dash 1s linear infinite;\n}\n\n.default-point {\n  color: lightgray;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.default-point.hovered {\n  color: #00c0ff;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[LinkModel,core.ChangeDetectorRef])],DefaultLinkComponent);var mapTo=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js");let DefaultNodeComponent=class DefaultNodeComponent{constructor(model,engine,diagram,iterableDiffers){this.model=model,this.engine=engine,this.diagram=diagram,this.iterableDiffers=iterableDiffers,this.portDiffers=this.iterableDiffers.find([]).create(((index,item)=>item.id))}ngOnInit(){this.updatePorts()}getPortsHost(){return this.portsLayer}updatePorts(){this.model.selectPorts().pipe((0,takeUntil.R)(this.model.onEntityDestroy()),(0,filter.h)((ports=>null!=ports)),(0,tap.b)((ports=>this.applyPortChanges(this.portDiffers.diff(ports)))),(0,switchMap.w)((ports=>(0,combineLatest.a)(ports.map((port=>port.paintChanges().pipe((0,pluck.j)("isPainted"),(0,filter.h)(Boolean),(0,take.q)(1))))))),(0,filter.h)((val=>null!==val)),(0,mapTo.h)(!0)).subscribe((()=>!this.model.getPainted().isPainted&&this.model.setPainted(!0)))}applyPortChanges(changes){if(changes){const canvasManager=this.engine.getCanvasManager();changes.forEachAddedItem((({item})=>{canvasManager.paintModel(item,this.getPortsHost()),item.setParent(this.model),this.model.updatePortCoords(item,this.diagram.diagramEngine)})),changes.forEachMovedItem((({item})=>{this.model.updatePortCoords(item,this.diagram.diagramEngine)}))}}};DefaultNodeComponent.ctorParameters=()=>[{type:NodeModel,decorators:[{type:core.Inject,args:[MODEL]}]},{type:EngineService},{type:RxZuDiagramComponent},{type:core.IterableDiffers}],DefaultNodeComponent.propDecorators={portsLayer:[{type:core.ViewChild,args:["portsLayer",{read:core.ViewContainerRef,static:!0}]}]},DefaultNodeComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-default-node",template:'<div\n  class="default-node"\n  [ngClass]="{\n    selected: model.selectSelected() | async,\n    hovered: model.selectHovered() | async\n  }"\n  (mouseover)="model.setHovered()"\n  (mouseout)="model.setHovered(false)"\n>\n  <div class="ports">\n    <ng-template #portsLayer></ng-template>\n  </div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n}\n\n.default-node {\n  display: block;\n  width: 200px;\n  height: 200px;\n  pointer-events: all;\n  border-radius: 10px;\n  -webkit-user-select: none;\n          user-select: none;\n  cursor: auto;\n  background-color: white;\n}\n\n.default-node.selected {\n  background-color: honeydew;\n}\n\n.default-node.hovered {\n  background-color: gainsboro;\n}\n\n.ports {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[NodeModel,EngineService,RxZuDiagramComponent,core.IterableDiffers])],DefaultNodeComponent);let DefaultPortComponent=class DefaultPortComponent{constructor(model){this.model=model}ngOnInit(){this.model.setPainted(!0)}};DefaultPortComponent.ctorParameters=()=>[{type:PortModel,decorators:[{type:core.Inject,args:[MODEL]}]}],DefaultPortComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-default-port",template:'<div draggable="false"></div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: relative;\n  width: 10px;\n  height: 10px;\n  border-radius: 60px;\n  border: 1px solid gray;\n  background-color: lightgray;\n  margin: 10px 0;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[PortModel])],DefaultPortComponent);const DEFAULTS=[{type:"node",component:DefaultNodeComponent},{type:"port",component:DefaultPortComponent},{type:"link",component:DefaultLinkComponent},{type:"label",component:DefaultLabelComponent}],COMPONENTS=[DefaultLinkComponent,DefaultLabelComponent,DefaultPortComponent,DefaultNodeComponent];let RxZuDefaultsModule=class RxZuDefaultsModule{};RxZuDefaultsModule=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[...COMPONENTS],imports:[common.ez,RxZuModule.withComponents(DEFAULTS)],entryComponents:[...COMPONENTS],exports:[...COMPONENTS,RxZuModule]})],RxZuDefaultsModule)},"./libs/angular-storybook/stories/actions/actions.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Actions:()=>Actions,default:()=>actions_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js");let ActionsExampleStoryComponent=class ActionsExampleStoryComponent{constructor(){this.events=new core.EventEmitter,this.diagramModel=new src.Vm}ngOnInit(){const node1=new src.XF({coords:{x:500,y:300}}),outPort=new src.AJ({id:"outport1"});node1.addPort(outPort);const node2=new src.XF({coords:{x:1e3,y:0}}),inPort=new src.AJ({id:"inport2"});node2.addPort(inPort);for(let index=0;index<2;index++){const nodeLoop=new src.XF({coords:{x:1e3,y:300+300*index}}),portLoop=new src.AJ({id:`inport${index+3}`});nodeLoop.addPort(portLoop),this.diagramModel.addNode(nodeLoop)}const link=outPort.link(inPort),models=[node1,node2];link&&(link.setLocked(),models.push(link)),this.diagramModel.addAll(...models)}ngAfterViewInit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit(),this.subscribeToDiagramEvents()}subscribeToDiagramEvents(){var _a;null===(_a=this.diagram)||void 0===_a||_a.diagramEngine.getActionsManager().observeActions().pipe((0,filter.h)((e=>!!e))).subscribe((e=>this.events.emit(e)))}};ActionsExampleStoryComponent.ctorParameters=()=>[],ActionsExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}],events:[{type:core.Output}]},ActionsExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'<rxzu-diagram\n    class="demo-diagram"\n    [model]="diagramModel"\n  ></rxzu-diagram>',styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[])],ActionsExampleStoryComponent);const actions_stories={title:"Actions",parameters:{docs:{iframeHeight:"400px"}},argTypes:{events:{action:"actions"}},decorators:[(0,client.moduleMetadata)({declarations:[ActionsExampleStoryComponent],providers:[],imports:[common.ez,src.BW]})]},Actions=(args=>({component:ActionsExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/auto-arrange/auto-arrange.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoArrange:()=>AutoArrange,default:()=>auto_arrange_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let AutoArrangeExampleStoryComponent=class AutoArrangeExampleStoryComponent{constructor(dagreEngine){this.dagreEngine=dagreEngine,this.diagramModel=new src.Vm}ngOnInit(){const node1=new src.XF;node1.setCoords({x:500,y:300});const outport1=new src.AJ;node1.addPort(outport1);const node2=new src.XF;node2.setCoords({x:1e3,y:0});const inport=new src.AJ;node2.addPort(inport);for(let index=0;index<2;index++){const nodeLoop=new src.XF;nodeLoop.setCoords({x:10*Math.random()*1e3,y:300+index*(10*Math.random())*300});const inportLoop=new src.AJ;node2.addPort(inport),nodeLoop.addPort(inportLoop),this.diagramModel.addNode(nodeLoop);const linkLoop=outport1.link(inportLoop);linkLoop&&this.diagramModel.addLink(linkLoop)}this.diagramModel.addAll(node1,node2)}ngAfterViewInit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}autoArrange(){var _a;this.dagreEngine.redistribute(this.diagramModel,{graph:{align:"DL",rankdir:"LR",ranksep:150}}),null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}};AutoArrangeExampleStoryComponent.ctorParameters=()=>[{type:src.oY}],AutoArrangeExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},AutoArrangeExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'\n    <div class="action-bar">\n      <button (click)="autoArrange()">Auto Arrange</button>\n    </div>\n    <rxzu-diagram class="demo-diagram" [model]="diagramModel"></rxzu-diagram>\n  ',styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[src.oY])],AutoArrangeExampleStoryComponent);const auto_arrange_stories={title:"Auto Arrange",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[AutoArrangeExampleStoryComponent],providers:[src.oY],imports:[common.ez,src.BW]})]},AutoArrange=(args=>({component:AutoArrangeExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/drag-and-drop/drag-and-drop.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DragAndDrop:()=>DragAndDrop,default:()=>drag_and_drop_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let DragAndDropExampleStoryComponent=class DragAndDropExampleStoryComponent{constructor(){this.nodesDefaultDimensions={height:200,width:200},this.nodesLibrary=[{color:"#AFF8D8",name:"default"},{color:"#FFB5E8",name:"default"},{color:"#85E3FF",name:"default"}],this.diagramModel=new src.Vm}ngAfterViewInit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}createNode(type){const nodeData=this.nodesLibrary.find((nodeLib=>nodeLib.name===type));if(nodeData){const node=new src.XF({namespace:nodeData.name});return node.setExtras(nodeData),node}return null}onBlockDrag(e){const type=e.target.getAttribute("data-type");e.dataTransfer&&type&&e.dataTransfer.setData("type",type)}onBlockDropped(e){var _a;if(e.dataTransfer){const nodeType=e.dataTransfer.getData("type"),node=this.createNode(nodeType),canvasManager=null===(_a=this.diagram)||void 0===_a?void 0:_a.diagramEngine.getCanvasManager();if(canvasManager){const droppedPoint=canvasManager.getZoomAwareRelativePoint(e),coords={x:droppedPoint.x-this.nodesDefaultDimensions.width/2,y:droppedPoint.y-this.nodesDefaultDimensions.height/2};node&&(node.setCoords(coords),this.diagramModel.addNode(node))}}}};DragAndDropExampleStoryComponent.ctorParameters=()=>[],DragAndDropExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},DragAndDropExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'\n    <div class="action-bar">\n      <div\n        *ngFor="let node of nodesLibrary"\n        class="node-drag"\n        draggable="true"\n        [attr.data-type]="node.name"\n        (dragstart)="onBlockDrag($event)"\n        [ngStyle]="{ \'background-color\': node.color }"\n      >\n        {{ node.name }}\n      </div>\n      <div></div>\n    </div>\n    <rxzu-diagram\n      class="demo-diagram"\n      [model]="diagramModel"\n      (drop)="onBlockDropped($event)"\n      (dragover)="$event.preventDefault()"\n    ></rxzu-diagram>\n  ',styles:[demo_diagram_componentngResource,".node-drag {\n  display: block;\n  cursor: grab;\n  background-color: white;\n  border-radius: 30px;\n  padding: 5px 15px;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[])],DragAndDropExampleStoryComponent);const drag_and_drop_stories={title:"Drag And Drop",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[DragAndDropExampleStoryComponent],providers:[],imports:[common.ez,src.BW]})]},DragAndDrop=(args=>({component:DragAndDropExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/dynamic-ports/dynamic-ports.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DynamicPorts:()=>DynamicPorts,default:()=>dynamic_ports_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let DynamicPortsExampleStoryComponent=class DynamicPortsExampleStoryComponent{constructor(){this.diagramModel=new src.Vm}ngOnInit(){const nodesDefaultDimensions={height:200,width:200},node1=new src.XF({coords:{x:500,y:300},dimensions:nodesDefaultDimensions,id:"1"}),outPort1=new src.AJ({id:"1"}),outPort2=new src.AJ({id:"2"}),outPort3=new src.AJ({id:"3"});node1.addPort(outPort1),node1.addPort(outPort2),node1.addPort(outPort3);const node2=new src.XF({coords:{x:1e3,y:0},dimensions:nodesDefaultDimensions}),inPort=new src.AJ;node2.addPort(inPort);for(let index=0;index<2;index++){const nodeLoop=new src.XF({coords:{x:1e3,y:300+300*index},dimensions:nodesDefaultDimensions}),loopPort=new src.AJ;nodeLoop.addPort(loopPort),this.diagramModel.addNode(nodeLoop)}const link=outPort3.link(inPort),models=[node1,node2];link&&(link.setLocked(),models.push(link)),this.diagramModel.addAll(...models)}ngAfterViewInit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}addPort(){const node=this.diagramModel.getNode("1");if(!node)return;const portsArray=node.getPortsArray(),lastPort=portsArray[portsArray.length-1];let newId;newId=lastPort?(+lastPort.id+1).toString():"0";const newPort=new src.AJ({id:newId});node.addPort(newPort)}removePort(){const node=this.diagramModel.getNode("1");if(!node)return;const firstPort=node.getPortsArray()[0];firstPort&&node.removePort(firstPort)}};DynamicPortsExampleStoryComponent.ctorParameters=()=>[],DynamicPortsExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},DynamicPortsExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'\n    <div class="action-bar">\n      <button (click)="addPort()">Add Last Port</button>\n      <button (click)="removePort()">Remove First Port</button>\n    </div>\n    <rxzu-diagram class="demo-diagram" [model]="diagramModel"></rxzu-diagram>\n  ',styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[])],DynamicPortsExampleStoryComponent);const dynamic_ports_stories={title:"Dynamic Ports",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[DynamicPortsExampleStoryComponent],providers:[],imports:[common.ez,src.BW]})]},DynamicPorts=(args=>({component:DynamicPortsExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/fit-to-center/fit-to-center.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FitToCenter:()=>FitToCenter,default:()=>fit_to_center_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let FitToCenterStoryComponent=class FitToCenterStoryComponent{constructor(dagreEngine){this.dagreEngine=dagreEngine,this.diagramModel=new src.Vm}ngOnInit(){const node1=new src.XF;node1.setCoords({x:500,y:300});const outport1=new src.AJ;node1.addPort(outport1);const node2=new src.XF;node2.setCoords({x:1e3,y:0});const inport=new src.AJ;node2.addPort(inport);for(let index=0;index<12;index++){const nodeLoop=new src.XF;nodeLoop.setCoords({x:10*Math.random()*1e3,y:300+index*(10*Math.random())*300});const inportLoop=new src.AJ;node2.addPort(inport),nodeLoop.addPort(inportLoop),this.diagramModel.addNode(nodeLoop);const linkLoop=outport1.link(inportLoop);linkLoop&&this.diagramModel.addLink(linkLoop)}this.diagramModel.addAll(node1,node2)}ngAfterViewInit(){setTimeout((()=>{var _a;this.arrange(),null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}))}arrange(){this.dagreEngine.redistribute(this.diagramModel,{graph:{align:"DL",rankdir:"LR",ranksep:150}})}center(){this.diagramModel.diagramEngine.fitToCenter()}};FitToCenterStoryComponent.ctorParameters=()=>[{type:src.oY}],FitToCenterStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},FitToCenterStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'\n    <div class="action-bar">\n      <button (click)="center()">Center</button>\n    </div>\n    <rxzu-diagram class="demo-diagram" [model]="diagramModel"></rxzu-diagram>\n  ',styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[src.oY])],FitToCenterStoryComponent);const fit_to_center_stories={title:"Fit To Center",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[FitToCenterStoryComponent],providers:[src.oY],imports:[common.ez,src.BW]})]},FitToCenter=(args=>({component:FitToCenterStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/performance/performance.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Performance:()=>Performance,default:()=>performance_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),interval=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/interval.js"),animationFrame=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/animationFrame.js"),bufferTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/bufferTime.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");let PerformanceExampleStoryComponent=class PerformanceExampleStoryComponent{constructor(){this.fps$=(0,interval.F)(0,animationFrame.Z).pipe((0,bufferTime.e)(1e3),(0,map.U)((value=>value.length))),this.initialRenderTimer=0,this.isResseted=!1,this.numberOfNodes=500,this.diagramModel=new src.Vm}ngOnInit(){this.createDiagram()}ngAfterViewInit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}createDiagram(){this.createNodes()}resetDiagram(){this.diagramModel.reset(),this.isResseted=!0}createNodes(){this.isResseted=!1;const startTime=performance.now();for(let index=0;index<this.numberOfNodes;index++){const nodeLoop=new src.XF({id:`${index}`}),row=index%10,col=Math.floor(index/10);nodeLoop.setCoords({x:1e3*row,y:300*col});const inPort=new src.AJ({id:`${index}`}),outPort=new src.AJ;nodeLoop.addPort(inPort);const outport=nodeLoop.addPort(outPort);if(this.diagramModel.addNode(nodeLoop),index>0){const prevPort=this.diagramModel.getNode(""+(index-1)).getPort(""+(index-1)),link=outport.link(prevPort);if(link){const label=new src.aS({text:"label"});link.setLabel(label),this.diagramModel.addLink(link)}}}const endTime=performance.now();this.initialRenderTimer=endTime-startTime}};PerformanceExampleStoryComponent.ctorParameters=()=>[],PerformanceExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},PerformanceExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'\n    <div class="action-bar">\n      <button (click)="resetDiagram()" *ngIf="isResseted === false">\n        Reset\n      </button>\n      <button (click)="createDiagram()" *ngIf="isResseted">Recreate</button>\n      FPS: {{ fps$ | async }} Rendered {{ numberOfNodes }} nodes and links in\n      {{ initialRenderTimer | number: \'1.0-0\' }} ms\n    </div>\n    <rxzu-diagram class="demo-diagram" [model]="diagramModel"></rxzu-diagram>\n  ',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[])],PerformanceExampleStoryComponent);const performance_stories={title:"Performance",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[PerformanceExampleStoryComponent],providers:[],imports:[common.ez,src.BW]})]},Performance=(args=>({component:PerformanceExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/themes/gh-workflow/gh-workflow.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GithubWorkflow:()=>GithubWorkflow,default:()=>gh_workflow_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),src=__webpack_require__("./libs/angular/src/index.ts");class GHPortModel extends src.AJ{constructor(options){var _a;super(Object.assign(Object.assign({},options),{namespace:"gh",linkNamespace:"gh"})),this.direction$=(0,src.Mr)(null!==(_a=options.direction)&&void 0!==_a?_a:"in"),this.setCanCreateLinks("out"===this.direction$.value)}canLinkToPort(port){return port.getParent()!==this.getParent()}}class GHNodeModel extends src.XF{constructor(options){super(Object.assign(Object.assign({},options),{namespace:"gh"}))}}let GHWorkfflowExampleStoryComponent=class GHWorkfflowExampleStoryComponent{constructor(){this.diagramModel=new src.Vm}ngOnInit(){const node1=new GHNodeModel({coords:{x:500,y:300},extras:[{id:"4",displayName:"START",status:"success",executionTime:2622}]}),outPort=new GHPortModel({id:"outport1",direction:"out"});node1.addPort(outPort);const node2=new GHNodeModel({coords:{x:1e3,y:0},extras:[{id:"3",displayName:"Security Pipeline",status:"fail",executionTime:231}]}),inPort=new GHPortModel({id:"inport2"});node2.addPort(inPort);for(let index=0;index<2;index++){const nodeLoop=new GHNodeModel({coords:{x:1e3,y:300+300*index},extras:[{id:"2",displayName:`Extra success ${index}`,status:"success",executionTime:2622},{id:"1",displayName:`Extra fail ${index}`,status:"fail",executionTime:2622}]}),portLoop=new GHPortModel({id:`inport${index+3}`});nodeLoop.addPort(portLoop),this.diagramModel.addNode(nodeLoop)}const link=outPort.link(inPort),models=[node1,node2];link&&(link.setLocked(),models.push(link)),this.diagramModel.addAll(...models)}};GHWorkfflowExampleStoryComponent.ctorParameters=()=>[],GHWorkfflowExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},GHWorkfflowExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'<rxzu-diagram\n    class="demo-diagram"\n    [model]="diagramModel"\n  ></rxzu-diagram>',styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[])],GHWorkfflowExampleStoryComponent);let GHWorkflowLabelComponent=class GHWorkflowLabelComponent{constructor(model,cdRef){this.model=model,this.cdRef=cdRef}ngOnInit(){this.model.selectCoords().subscribe((()=>{this.cdRef.detectChanges()})),this.model.setPainted(!0)}};GHWorkflowLabelComponent.ctorParameters=()=>[{type:src.aS,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:core.ChangeDetectorRef}],GHWorkflowLabelComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-gh-workflow-label",template:"<div\n  class=\"default-label\"\n  [ngStyle]=\"{\n    transform:\n      'translate(' +\n      (model.selectCoords() | async)?.x +\n      'px, ' +\n      (model.selectCoords() | async)?.y +\n      'px)' +\n      'rotate(' +\n      (model.selectRotation() | async) +\n      'deg)'\n  }\"\n>\n  {{ model.selectText() | async }}\n</div>\n",changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n}\n\n.default-label {\n  color: white;\n  -webkit-user-select: none;\n          user-select: none;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[src.aS,core.ChangeDetectorRef])],GHWorkflowLabelComponent);let GHWorkflowPortComponent=class GHWorkflowPortComponent extends src.ue{constructor(model,elRef,renderer){super(model),this.model=model,this.elRef=elRef,this.renderer=renderer}ngOnInit(){super.ngOnInit(),this.updatePortRootStyle()}updatePortRootStyle(){const rootEl=this.elRef.nativeElement;this.renderer.addClass(rootEl,this.model.direction$.value),this.model.getParent().selectHovered().subscribe((hovered=>{this.model.getLinksArray().forEach((link=>{var _a,_b;link.setHovered(hovered),null===(_a=link.getTargetPort())||void 0===_a||_a.setHovered(hovered),null===(_b=link.getSourcePort())||void 0===_b||_b.setHovered(hovered)}))}))}};GHWorkflowPortComponent.ctorParameters=()=>[{type:GHPortModel,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:core.ElementRef},{type:core.Renderer2}],GHWorkflowPortComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-gh-workflow-port",template:"<div\n  class=\"inner-circle\"\n  [ngClass]=\"(model.selectHovered() | async) ? 'hovered' : ''\"\n></div>\n",changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[':host {\n  position: absolute;\n  top: 35%;\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n}\n:host::before {\n  position: absolute;\n  content: "";\n  border-radius: 50%;\n  transition: background-color 0.12s ease-out;\n  top: 1px;\n  left: 1px;\n  width: 12px;\n  height: 12px;\n  background-color: #21262d;\n}\n:host.in {\n  left: -8px;\n  background-image: linear-gradient(270deg, #21262d, #21262d 36%, #30363d 0, #30363d);\n}\n:host.out {\n  right: -8px;\n  background-image: linear-gradient(90deg, #21262d, #21262d 36%, #30363d 0, #30363d);\n}\n:host .inner-circle {\n  position: relative;\n  top: 3px;\n  left: 3px;\n  width: 8px;\n  height: 8px;\n  content: "";\n  background-color: #484f58;\n  border-radius: 50%;\n  transition: background-color ease-out 0.12s;\n}\n:host .inner-circle.hovered {\n  background-color: #1f6ff1;\n}']}),(0,tslib_es6.w6)("design:paramtypes",[GHPortModel,core.ElementRef,core.Renderer2])],GHWorkflowPortComponent);let GHWorkflowLinkComponent=class GHWorkflowLinkComponent extends src.mr{constructor(model,cdRef){super(model,cdRef),this.model=model}};GHWorkflowLinkComponent.ctorParameters=()=>[{type:src.KW,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:core.ChangeDetectorRef}],GHWorkflowLinkComponent.propDecorators={labelLayer:[{type:core.ViewChild,args:["labelLayer",{read:core.ViewContainerRef,static:!0}]}]},GHWorkflowLinkComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-gh-workflow-link",template:'\x3c!-- Label Host --\x3e\n<ng-template #labelLayer></ng-template>\n\n<svg class="link-container">\n  \x3c!-- Link --\x3e\n  <g [id]="model.id">\n    <path\n      class="gh-workflow-link"\n      stroke-width="2"\n      stroke="#484f58"\n      [attr.d]="model.selectPath() | async"\n      [ngClass]="{ hovered: model.selectHovered() | async }"\n    ></path>\n  </g>\n\n  \x3c!-- Points --\x3e\n  <g\n    *ngFor="let point of model.getPoints(); trackBy: trackByPoints"\n    [id]="point.id"\n  >\n    <circle\n      fill="currentColor"\n      [attr.cx]="point.selectX() | async"\n      [attr.cy]="point.selectY() | async"\n      r="5"\n      class="gh-workflow-point"\n      [ngClass]="{ hovered: point.selectHovered() | async }"\n    />\n    <circle\n      [attr.data-type]="point.type"\n      [attr.data-id]="point.id"\n      [attr.data-parent-id]="model.id"\n      (mouseleave)="point.setHovered(false); model.setHovered(false)"\n      (mouseenter)="point.setHovered(); model.setHovered()"\n      [attr.cx]="point.selectX() | async"\n      [attr.cy]="point.selectY() | async"\n      r="15"\n      [attr.opacity]="0"\n      [ngClass]="{ selected: point.selectSelected() | async }"\n    />\n  </g>\n</svg>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n}\n\n.link-container {\n  position: relative;\n  fill: none;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.gh-workflow-link {\n  transition: background-color 0.12s ease-out;\n  fill: none;\n  overflow: visible;\n}\n\n.gh-workflow-link.hovered {\n  stroke: #1f6ff1;\n}\n\n.gh-workflow-point {\n  transition: background-color 0.12s ease-out;\n  color: lightgray;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.gh-workflow-point.hovered {\n  color: #1f6ff1;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[src.KW,core.ChangeDetectorRef])],GHWorkflowLinkComponent);let GHWorkflowNodeComponent=class GHWorkflowNodeComponent extends src.uA{constructor(model,engine,diagram,iterableDiffers){super(model,engine,diagram,iterableDiffers),this.model=model}};GHWorkflowNodeComponent.ctorParameters=()=>[{type:GHNodeModel,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:src.Sm},{type:src.CQ},{type:core.IterableDiffers}],GHWorkflowNodeComponent.propDecorators={portsLayer:[{type:core.ViewChild,args:["portsLayer",{read:core.ViewContainerRef,static:!0}]}]},GHWorkflowNodeComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-gh-workflow-node",template:'<div\n  class="gh-workflow-node"\n  (mouseover)="model.setHovered()"\n  (mouseout)="model.setHovered(false)"\n>\n  <div\n    class="pipes"\n    [ngClass]="{ multiple: (model.selectExtras() | async).length > 1 }"\n  >\n    <div\n      *ngFor="\n        let pipe of model.selectExtras() | async;\n        let l = count;\n        let i = index\n      "\n      class="content"\n    >\n      <div class="status" [ngClass]="pipe.status">\n        \x3c!-- {{ pipe.status }} --\x3e\n        <svg\n          width="16"\n          height="16"\n          viewBox="0 0 16 16"\n          version="1.1"\n          aria-hidden="true"\n          fill="currentColor"\n        >\n          <ng-container *ngIf="pipe.status === \'success\'">\n            <path\n              fill-rule="evenodd"\n              d="M8 16A8 8 0 108 0a8 8 0 000 16zm3.78-9.72a.75.75 0 00-1.06-1.06L6.75 9.19 5.28 7.72a.75.75 0 00-1.06 1.06l2 2a.75.75 0 001.06 0l4.5-4.5z"\n            ></path>\n          </ng-container>\n          <ng-container *ngIf="pipe.status === \'fail\'">\n            <path\n              fill-rule="evenodd"\n              d="M2.343 13.657A8 8 0 1113.657 2.343 8 8 0 012.343 13.657zM6.03 4.97a.75.75 0 00-1.06 1.06L6.94 8 4.97 9.97a.75.75 0 101.06 1.06L8 9.06l1.97 1.97a.75.75 0 101.06-1.06L9.06 8l1.97-1.97a.75.75 0 10-1.06-1.06L8 6.94 6.03 4.97z"\n            ></path>\n          </ng-container>\n        </svg>\n      </div>\n      <div class="name">\n        {{ pipe.displayName }}\n      </div>\n      <div class="time">\n        {{ pipe.executionTime / 60 | number: \'1.0\':\'en-US\' }}s\n      </div>\n    </div>\n  </div>\n\n  <div class="ports">\n    <ng-template #portsLayer></ng-template>\n  </div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  display: block;\n  position: absolute;\n}\n\n.gh-workflow-node {\n  min-height: 50px;\n  min-width: 260px;\n  border: 1px solid #30363d;\n  display: flex;\n  pointer-events: all;\n  width: 100%;\n  border-radius: 10px;\n  -webkit-user-select: none;\n          user-select: none;\n  cursor: auto;\n  background-color: #21262d;\n  transition: background-color 0.12s ease-out, border-color 0.12s ease-out, box-shadow 0.12s ease-out;\n}\n\n.pipes {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.pipes.multiple {\n  padding: 16px;\n}\n\n.pipes .content {\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  transition: opacity 0.12s ease-out, background-color 0.12s ease-out;\n  cursor: pointer;\n  padding: 12px;\n  height: 100%;\n}\n\n.pipes .content:hover:not(:only-child) {\n  background-color: #0d1117;\n}\n\n.pipes .content .status {\n  flex: 0;\n  display: flex;\n}\n\n.pipes .content .status.success {\n  color: #2ea043;\n}\n\n.pipes .content .status.fail {\n  color: #f85149;\n}\n\n.pipes .content .name {\n  flex: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-weight: 500;\n  padding-left: 8px;\n  color: #c9d1d9;\n}\n\n.pipes .content .time {\n  flex: 0;\n  padding-left: 4px;\n  font-size: 12px;\n  color: #8b949e;\n  flex-shrink: 0;\n}\n\n.ports {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[GHNodeModel,src.Sm,src.CQ,core.IterableDiffers])],GHWorkflowNodeComponent);const GHWorkflowTheme=[{type:"node",component:GHWorkflowNodeComponent,namespace:"gh"},{type:"port",component:GHWorkflowPortComponent,namespace:"gh"},{type:"link",component:GHWorkflowLinkComponent,namespace:"gh"},{type:"label",component:GHWorkflowLabelComponent,namespace:"gh"}],COMPONENTS=[GHWorkflowNodeComponent,GHWorkflowPortComponent,GHWorkflowLinkComponent,GHWorkflowLabelComponent];let RxZuGHWorkflowTheme=class RxZuGHWorkflowTheme{};RxZuGHWorkflowTheme=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[...COMPONENTS],imports:[common.ez,src.Om.withComponents(GHWorkflowTheme)],entryComponents:[...COMPONENTS],exports:[...COMPONENTS,src.Om]})],RxZuGHWorkflowTheme);const gh_workflow_stories={title:"Themes/Github Workflow",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[GHWorkfflowExampleStoryComponent],imports:[common.ez,RxZuGHWorkflowTheme]})]},GithubWorkflow=(args=>({component:GHWorkfflowExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/themes/vonage-studio/vonage-studio.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{VonageStudio:()=>VonageStudio,default:()=>vonage_studio_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var NodeStatus,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),src=__webpack_require__("./libs/angular/src/index.ts");class VStudioPortModel extends src.AJ{constructor(options){var _a;super(Object.assign(Object.assign({},options),{namespace:"vstudio",linkNamespace:"vstudio"})),this.direction$=(0,src.Mr)(null!==(_a=options.direction)&&void 0!==_a?_a:"in"),this.setCanCreateLinks("out"===this.direction$.value)}canLinkToPort(port){return port.getParent()!==this.getParent()}}!function(NodeStatus){NodeStatus.DEFAULT="default",NodeStatus.WARNING="warning",NodeStatus.ERROR="error"}(NodeStatus||(NodeStatus={}));class VStudioNodeModel extends src.XF{constructor(options){super(Object.assign(Object.assign({},options),{namespace:"vstudio"})),this.status$=(0,src.Mr)(NodeStatus.DEFAULT)}selectStatus(){return this.status$.select()}setStatus(status){this.status$.set(status)}}let VStudioExampleStoryComponent=class VStudioExampleStoryComponent{constructor(){this.diagramModel=new src.Vm}ngOnInit(){const node1=new VStudioNodeModel({coords:{x:500,y:300},extras:{title:"Start",icon:"S"}}),outPort=new VStudioPortModel({id:"outport1",direction:"out"});node1.addPort(outPort);const node2=new VStudioNodeModel({coords:{x:1e3,y:0},extras:{color:"rgba(83, 202, 106, 0.7)",title:"Collect Input",icon:"C",inputs:[{content:"TOPIC: Hello, how can I help you?"}]}}),inPort=new VStudioPortModel({id:"inport2"});node2.addPort(inPort);for(let index=0;index<2;index++){const nodeLoop=new VStudioNodeModel({coords:{x:1e3,y:300+300*index},extras:{color:"rgba(101, 186, 255, 0.7)",title:"Collect Input",icon:"C",inputs:[{content:"Opening hours"},{content:"Opening hours"}]}}),portLoop=new VStudioPortModel({id:`inport${index+3}`});nodeLoop.addPort(portLoop),this.diagramModel.addNode(nodeLoop)}const link=outPort.link(inPort),models=[node1,node2];link&&(link.setLocked(),models.push(link)),this.diagramModel.addAll(...models)}ngAfterViewInit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}};VStudioExampleStoryComponent.ctorParameters=()=>[],VStudioExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},VStudioExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'<rxzu-diagram\n    class="vonage-studio-diagram"\n    [model]="diagramModel"\n  ></rxzu-diagram>',styles:[".vonage-studio-diagram {\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #f2f2f2;\n  background-image: linear-gradient(0deg, transparent 24%, rgba(85, 85, 85, 0.1) 25%, rgba(85, 85, 85, 0.1) 26%, transparent 27%, transparent 74%, rgba(85, 85, 85, 0.1) 75%, rgba(85, 85, 85, 0.1) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(85, 85, 85, 0.1) 25%, rgba(85, 85, 85, 0.1) 26%, transparent 27%, transparent 74%, rgba(85, 85, 85, 0.1) 75%, rgba(85, 85, 85, 0.1) 76%, transparent 77%, transparent);\n  background-size: 50px 50px;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[])],VStudioExampleStoryComponent);let VStudioLabelComponent=class VStudioLabelComponent{constructor(model,cdRef){this.model=model,this.cdRef=cdRef}ngOnInit(){this.model.selectCoords().subscribe((()=>{this.cdRef.detectChanges()})),this.model.getParent().selectHovered().subscribe((()=>{this.onHover()})),this.model.setPainted(!0)}onHover(){this.cdRef.detectChanges()}deleteLink(){this.model.getParent().destroy()}};VStudioLabelComponent.ctorParameters=()=>[{type:src.aS,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:core.ChangeDetectorRef}],VStudioLabelComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-vonage-studio-label",template:'<div\n  class="vonage-studio-label"\n  (mouseenter)="model.setHovered(); onHover()"\n  (mouseleave)="model.setHovered(false)"\n  [ngStyle]="{\n    transform:\n      \'translate(\' +\n      ((model.selectCoords() | async).x - 35) +\n      \'px, \' +\n      ((model.selectCoords() | async).y - 35) +\n      \'px)\'\n  }"\n  (click)="deleteLink()"\n  [ngClass]="{\n    show:\n      (model.getParent().selectHovered() | async) ||\n      (model.selectHovered() | async)\n  }"\n>\n  <svg\n    fill="currentcolor"\n    xmlns="http://www.w3.org/2000/svg"\n    height="14px"\n    width="14px"\n    viewBox="-47 0 512 512"\n  >\n    <path\n      fill="currentcolor"\n      d="m416.875 114.441406-11.304688-33.886718c-4.304687-12.90625-16.339843-21.578126-29.941406-21.578126h-95.011718v-30.933593c0-15.460938-12.570313-28.042969-28.027344-28.042969h-87.007813c-15.453125 0-28.027343 12.582031-28.027343 28.042969v30.933593h-95.007813c-13.605469 0-25.640625 8.671876-29.945313 21.578126l-11.304687 33.886718c-2.574219 7.714844-1.2695312 16.257813 3.484375 22.855469 4.753906 6.597656 12.445312 10.539063 20.578125 10.539063h11.816406l26.007813 321.605468c1.933594 23.863282 22.183594 42.558594 46.109375 42.558594h204.863281c23.921875 0 44.175781-18.695312 46.105469-42.5625l26.007812-321.601562h6.542969c8.132812 0 15.824219-3.941407 20.578125-10.535157 4.753906-6.597656 6.058594-15.144531 3.484375-22.859375zm-249.320312-84.441406h83.0625v28.976562h-83.0625zm162.804687 437.019531c-.679687 8.402344-7.796875 14.980469-16.203125 14.980469h-204.863281c-8.40625 0-15.523438-6.578125-16.203125-14.980469l-25.816406-319.183593h288.898437zm-298.566406-349.183593 9.269531-27.789063c.210938-.640625.808594-1.070313 1.484375-1.070313h333.082031c.675782 0 1.269532.429688 1.484375 1.070313l9.269531 27.789063zm0 0"\n    />\n    <path\n      fill="currentcolor"\n      d="m282.515625 465.957031c.265625.015625.527344.019531.792969.019531 7.925781 0 14.550781-6.210937 14.964844-14.21875l14.085937-270.398437c.429687-8.273437-5.929687-15.332031-14.199219-15.761719-8.292968-.441406-15.328125 5.925782-15.761718 14.199219l-14.082032 270.398437c-.429687 8.273438 5.925782 15.332032 14.199219 15.761719zm0 0"\n    />\n    <path\n      fill="currentcolor"\n      d="m120.566406 451.792969c.4375 7.996093 7.054688 14.183593 14.964844 14.183593.273438 0 .554688-.007812.832031-.023437 8.269531-.449219 14.609375-7.519531 14.160157-15.792969l-14.753907-270.398437c-.449219-8.273438-7.519531-14.613281-15.792969-14.160157-8.269531.449219-14.609374 7.519532-14.160156 15.792969zm0 0"\n    />\n    <path\n      fill="currentcolor"\n      d="m209.253906 465.976562c8.285156 0 15-6.714843 15-15v-270.398437c0-8.285156-6.714844-15-15-15s-15 6.714844-15 15v270.398437c0 8.285157 6.714844 15 15 15zm0 0"\n    />\n  </svg>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n}\n\n.vonage-studio-label {\n  width: 26px;\n  height: 26px;\n  background-color: white;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  pointer-events: all;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: 0;\n  cursor: pointer;\n  transition: opacity 300ms ease-in-out;\n}\n\n.vonage-studio-label .delete-link-icon {\n  display: flex;\n}\n\n.vonage-studio-label.show {\n  opacity: 1;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[src.aS,core.ChangeDetectorRef])],VStudioLabelComponent);let VStudioPortComponent=class VStudioPortComponent extends src.ue{constructor(model,elRef,renderer){super(model),this.model=model,this.elRef=elRef,this.renderer=renderer}ngOnInit(){super.ngOnInit(),this.updatePortRootStyle()}updatePortRootStyle(){const rootEl=this.elRef.nativeElement;this.renderer.addClass(rootEl,this.model.direction$.value)}};VStudioPortComponent.ctorParameters=()=>[{type:VStudioPortModel,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:core.ElementRef},{type:core.Renderer2}],VStudioPortComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-vonage-studio-port",template:"<div></div>\n",changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n  top: 35%;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n  background-color: #ffffff;\n  border: 1px solid #b3b3b3;\n}\n:host.in {\n  left: -5px;\n  top: 45%;\n}\n:host.out {\n  right: -5px;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[VStudioPortModel,core.ElementRef,core.Renderer2])],VStudioPortComponent);let VStudioLinkComponent=class VStudioLinkComponent extends src.mr{constructor(model,cdRef){super(model,cdRef),this.model=model,this.model.setLabel(new src.aS({namespace:"vstudio"}))}};VStudioLinkComponent.ctorParameters=()=>[{type:src.KW,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:core.ChangeDetectorRef}],VStudioLinkComponent.propDecorators={labelLayer:[{type:core.ViewChild,args:["labelLayer",{read:core.ViewContainerRef,static:!0}]}]},VStudioLinkComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-vonage-studio-link",template:'\x3c!-- Label Host --\x3e\n<ng-template #labelLayer></ng-template>\n\n<svg class="link-container">\n  \x3c!-- Link --\x3e\n  <g [id]="model.id">\n    <path\n      class="vonage-studio-link"\n      stroke-width="2"\n      [attr.stroke]="\n        (model.selectSelected() | async) || (model.selectHovered() | async)\n          ? \'rgba(101, 186, 255, 0.7)\'\n          : \'#B3B3B3\'\n      "\n      [attr.d]="model.selectPath() | async"\n      [ngClass]="{ hovered: model.selectHovered() | async }"\n      (mouseleave)="model.setHovered(false); onHover()"\n      (mouseenter)="model.setHovered(); onHover()"\n    ></path>\n    <path\n      class="default-link"\n      (mouseleave)="model.setHovered(false); onHover()"\n      (mouseenter)="model.setHovered(); onHover()"\n      [attr.stroke-width]="20"\n      [attr.stroke]="\n        (model.selectSelected() | async) || (model.selectHovered() | async)\n          ? \'rgba(101, 186, 255, 0.7)\'\n          : \'#B3B3B3\'\n      "\n      [attr.stroke-linecap]="\'round\'"\n      [attr.data-linkid]="model.id"\n      [attr.stroke-opacity]="(model.selectHovered() | async) ? \'0.1\' : \'0\'"\n      [attr.d]="model.selectPath() | async"\n      (mouseleave)="model.setHovered(false); onHover()"\n      (mouseenter)="model.setHovered(); onHover()"\n    ></path>\n  </g>\n\n  \x3c!-- Points --\x3e\n  <g\n    *ngFor="let point of model.getPoints(); trackBy: trackByPoints"\n    [id]="point.id"\n  >\n    <circle\n      fill="currentColor"\n      [attr.cx]="point.selectX() | async"\n      [attr.cy]="point.selectY() | async"\n      r="5"\n      class="vonage-studio-point"\n      [ngClass]="{ hovered: point.selectHovered() | async }"\n    />\n    <circle\n      [attr.data-type]="point.type"\n      [attr.data-id]="point.id"\n      [attr.data-parent-id]="model.id"\n      (mouseleave)="point.setHovered(false); model.setHovered(false)"\n      (mouseenter)="point.setHovered(); model.setHovered()"\n      [attr.cx]="point.selectX() | async"\n      [attr.cy]="point.selectY() | async"\n      r="15"\n      [attr.opacity]="0"\n      [ngClass]="{ selected: point.selectSelected() | async }"\n    />\n  </g>\n</svg>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  position: absolute;\n}\n\n.link-container {\n  position: relative;\n  fill: none;\n  overflow: visible;\n  pointer-events: all;\n  position: relative;\n}\n\n.link-container .vonage-studio-link {\n  transition: stroke 300ms ease-in-out;\n}\n\n.vonage-studio-point {\n  color: lightgray;\n  overflow: visible;\n  pointer-events: all;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[src.KW,core.ChangeDetectorRef])],VStudioLinkComponent);var BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js");let VStudioNodeComponent=class VStudioNodeComponent extends src.uA{constructor(model,engine,diagram,iterableDiffers){super(model,engine,diagram,iterableDiffers),this.model=model,this.nodeGradient="linear-gradient(to right,rgb(242, 242, 242) 0%, rgb(242, 242, 242) 100%)",this.boxShadow$=new BehaviorSubject.X("0px 4px 12px rgba(0, 0, 0, 0.25)"),model.selectExtras().subscribe((extras=>{extras.color&&(this.nodeGradient=this.createNodeGradient(extras.color))})),model.selectSelected().subscribe((selected=>{this.boxShadow$.next(this.createSelectedShadow(selected)),this.updateLinksState(selected)})),model.selectStatus().subscribe((status=>{this.boxShadow$.next(this.createStatusShadow(status)),NodeStatus.ERROR})),this.model.selectPorts().subscribe((ports=>{ports.forEach((port=>{port.selectLinks().subscribe((links=>{this.model.setStatus(this.calculateStatus())}))}))}))}calculateStatus(){let numOfLinks=0;return this.model.getPorts().forEach((port=>{numOfLinks+=port.getLinks().size})),numOfLinks<=0?NodeStatus.WARNING:NodeStatus.DEFAULT}createStatusShadow(status){switch(status){case NodeStatus.WARNING:return"0px 4px 12px rgba(250, 212, 109, 0.7)";case NodeStatus.ERROR:return"0px 4px 12px rgba(254, 150, 150, 0.7)";case NodeStatus.DEFAULT:default:return"0px 4px 12px rgba(0, 0, 0, 0.25)"}}updateLinksState(selected){this.model.getPorts().forEach((port=>{port.getLinks().forEach((link=>{link.setSelected(selected)}))}))}createSelectedShadow(selected){return selected?"0px 4px 12px rgba(101, 186, 255, 0.7)":this.createStatusShadow(this.calculateStatus())}createNodeGradient(color){return`linear-gradient(to right, ${color} 0%, ${color} 2%, rgb(242, 242, 242) 2%)`}};VStudioNodeComponent.ctorParameters=()=>[{type:VStudioNodeModel,decorators:[{type:core.Inject,args:[src.Fi]}]},{type:src.Sm},{type:src.CQ},{type:core.IterableDiffers}],VStudioNodeComponent.propDecorators={portsLayer:[{type:core.ViewChild,args:["portsLayer",{read:core.ViewContainerRef,static:!0}]}]},VStudioNodeComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rxzu-vonage-studio-node",template:'<div class="vstudio-node" [ngStyle]="{ \'box-shadow\': boxShadow$ | async }">\n  <ng-container *ngIf="model.selectExtras() | async as extras">\n    <div class="content" [ngStyle]="{ background: nodeGradient }">\n      <div class="header">\n        <div class="title">\n          {{ extras.title }}\n        </div>\n        <div class="icon">\n          {{ extras.icon }}\n        </div>\n      </div>\n      <div class="info">\n        <div class="input" *ngFor="let input of extras.inputs">\n          {{ input.content }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n\n  <div class="ports">\n    <ng-template #portsLayer></ng-template>\n  </div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  display: block;\n  position: absolute;\n}\n\n.vstudio-node {\n  min-height: 50px;\n  width: 230px;\n  border: 1px solid #ffffff;\n  display: flex;\n  pointer-events: all;\n  border-radius: 8px;\n  -webkit-user-select: none;\n          user-select: none;\n  cursor: auto;\n  transition: box-shadow 300ms ease-in-out;\n}\n\n.vstudio-node .content {\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  width: 100%;\n  min-width: 0;\n}\n\n.vstudio-node .content .header {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.vstudio-node .content .header .title {\n  font-size: 12px;\n}\n\n.vstudio-node .content .info {\n  margin-top: 6px;\n}\n\n.vstudio-node .content .info .input {\n  font-size: 12px;\n  display: block;\n  padding: 3px 5px;\n  background-color: white;\n  border: 1px solid #999999;\n  border-radius: 3px;\n  font-size: 12px;\n  margin-bottom: 5px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.ports {\n  display: flex;\n  flex-direction: column;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[VStudioNodeModel,src.Sm,src.CQ,core.IterableDiffers])],VStudioNodeComponent);const GHWorkflowTheme=[{type:"node",component:VStudioNodeComponent,namespace:"vstudio"},{type:"port",component:VStudioPortComponent,namespace:"vstudio"},{type:"link",component:VStudioLinkComponent,namespace:"vstudio"},{type:"label",component:VStudioLabelComponent,namespace:"vstudio"}],COMPONENTS=[VStudioNodeComponent,VStudioPortComponent,VStudioLinkComponent,VStudioLabelComponent];let RxZuVStudioTheme=class RxZuVStudioTheme{};RxZuVStudioTheme=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[...COMPONENTS],imports:[common.ez,src.Om.withComponents(GHWorkflowTheme)],entryComponents:[...COMPONENTS],exports:[...COMPONENTS,src.Om]})],RxZuVStudioTheme);const vonage_studio_stories={title:"Themes/Vonage Studio",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[VStudioExampleStoryComponent],imports:[common.ez,RxZuVStudioTheme]})]},VonageStudio=(args=>({component:VStudioExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/zoom-to-fit/zoom-to-fit.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ZoomToFit:()=>ZoomToFit,default:()=>zoom_to_fit_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let ZoomToFitExampleStoryComponent=class ZoomToFitExampleStoryComponent{constructor(){this.diagramModel=new src.Vm}ngOnInit(){const node1=new src.XF;node1.setCoords({x:500,y:300});const outport1=new src.AJ;node1.addPort(outport1);const node2=new src.XF;node2.setCoords({x:100,y:100});const inport=new src.AJ;node2.addPort(inport);for(let index=0;index<2;index++){const nodeLoop=new src.XF;nodeLoop.setCoords({x:10*Math.random()*1e3,y:300+index*(10*Math.random())*300});const inportLoop=new src.AJ;node2.addPort(inport),nodeLoop.addPort(inportLoop),this.diagramModel.addNode(nodeLoop);const linkLoop=outport1.link(inportLoop);linkLoop&&this.diagramModel.addLink(linkLoop)}this.diagramModel.addAll(node1,node2)}ngAfterViewInit(){this.zoomToFit()}zoomToFit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}};ZoomToFitExampleStoryComponent.ctorParameters=()=>[],ZoomToFitExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},ZoomToFitExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'\n    <div class="action-bar">\n      <button (click)="zoomToFit()">Zoom to fit</button>\n    </div>\n    <rxzu-diagram class="demo-diagram" [model]="diagramModel"></rxzu-diagram>\n  ',styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[])],ZoomToFitExampleStoryComponent);const zoom_to_fit_stories={title:"Zoom To Fit",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[ZoomToFitExampleStoryComponent],providers:[src.oY],imports:[common.ez,src.BW]})]},ZoomToFit=(args=>({component:ZoomToFitExampleStoryComponent,props:args})).bind({})},"./libs/angular-storybook/stories/zoom-to-node/zoom-to-node.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ZoomToNode:()=>ZoomToNode,default:()=>zoom_to_node_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),src=__webpack_require__("./libs/angular/src/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),demo_diagram_componentngResource=__webpack_require__("./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let ZoomToNodeExampleStoryComponent=class ZoomToNodeExampleStoryComponent{constructor(){this.diagramModel=new src.Vm}ngOnInit(){const node1=new src.XF;node1.setCoords({x:500,y:300});const outport1=new src.AJ;node1.addPort(outport1);const node2=new src.XF;node2.setCoords({x:100,y:100});const inport=new src.AJ;node2.addPort(inport),node2.setSelected(!0);for(let index=0;index<2;index++){const nodeLoop=new src.XF;nodeLoop.setCoords({x:10*Math.random()*1e3,y:300+index*(10*Math.random())*300});const inportLoop=new src.AJ;node2.addPort(inport),nodeLoop.addPort(inportLoop),this.diagramModel.addNode(nodeLoop);const linkLoop=outport1.link(inportLoop);linkLoop&&this.diagramModel.addLink(linkLoop)}this.diagramModel.addAll(node1,node2)}ngAfterViewInit(){var _a;null===(_a=this.diagram)||void 0===_a||_a.zoomToFit()}zoomToNode(){var _a;const allNodes=this.diagramModel.getNodesArray(),nodeToZoomInto=allNodes[allNodes.length-1];null===(_a=this.diagram)||void 0===_a||_a.zoomToNodes([nodeToZoomInto],100)}};ZoomToNodeExampleStoryComponent.ctorParameters=()=>[],ZoomToNodeExampleStoryComponent.propDecorators={diagram:[{type:core.ViewChild,args:[src.CQ,{static:!0}]}]},ZoomToNodeExampleStoryComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-root",template:'\n    <div class="action-bar">\n      <button (click)="zoomToNode()">Zoom to node</button>\n    </div>\n    <rxzu-diagram class="demo-diagram" [model]="diagramModel"></rxzu-diagram>\n  ',styles:[demo_diagram_componentngResource]}),(0,tslib_es6.w6)("design:paramtypes",[])],ZoomToNodeExampleStoryComponent);const zoom_to_node_stories={title:"Zoom To Node",parameters:{docs:{iframeHeight:"400px"}},decorators:[(0,client.moduleMetadata)({declarations:[ZoomToNodeExampleStoryComponent],providers:[],imports:[common.ez,src.BW]})]},ZoomToNode=(args=>({component:ZoomToNodeExampleStoryComponent,props:args})).bind({})},"./generated-stories-entry.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./libs/angular-storybook/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./libs/angular-storybook/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)},"./libs/angular-storybook/.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{parameters:()=>parameters});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js"),create=__webpack_require__("./node_modules/@storybook/theming/dist/esm/create.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"ComponentProviderOptions","id":"interface-ComponentProviderOptions-c6eeef4a37b39551a93ba427c495fec5cbf1a70947a5c27d6e9cd6e840fed3e572f2d904c94ec579f915e158d6d881a9e8b4c5d5ad5d762920515133bfdb7556","file":"libs/angular/src/lib/injection.tokens.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { InjectionToken, Type } from \'@angular/core\';\\nimport { BaseEntityType, BaseModel, EngineSetup } from \'@rxzu/core\';\\n\\nexport const MODEL: InjectionToken<BaseModel> = new InjectionToken(\'MODEL\');\\n\\nexport interface ComponentProviderOptions<T = any> {\\n  component: Type<T>;\\n  type: BaseEntityType;\\n  namespace?: string;\\n}\\n\\nexport const COMPONENT: InjectionToken<\\n  Omit<ComponentProviderOptions, \'type\'>\\n> = new InjectionToken(\'COMPONENT\');\\n\\nexport const DIAGRAM_DEFAULT_OPTIONS: InjectionToken<EngineSetup> = new InjectionToken(\\n  \'DIAGRAM_DEFAULT_OPTIONS\',\\n  {\\n    providedIn: \'root\',\\n    factory: function () {\\n      return {\\n        allowCanvasZoom: true,\\n        allowCanvasTranslation: true,\\n        inverseZoom: true,\\n        allowLooseLinks: true,\\n        maxZoomOut: 0,\\n        maxZoomIn: 0,\\n        portMagneticRadius: 30,\\n      } as EngineSetup;\\n    },\\n  }\\n);\\n","properties":[{"name":"component","deprecated":false,"deprecationMessage":"","type":"Type<T>","optional":false,"description":"","line":7},{"name":"namespace","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9},{"name":"type","deprecated":false,"deprecationMessage":"","type":"BaseEntityType","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ZonedClass","id":"interface-ZonedClass-d3feecfdfd81565cb4872007356595d5918bacea2edcbfe933fa1b25158506f711c88cde03394d160b46eafc125c6a352633e7c6379e79d34d7d4723be116985","file":"libs/angular/src/lib/utils/decorators.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NgZone } from \'@angular/core\';\\n\\nexport interface ZonedClass {\\n  ngZone: NgZone;\\n}\\n\\nexport function OutsideZone<T extends ZonedClass>(\\n  targetClass: T,\\n  functionName: string,\\n  descriptor: any\\n) {\\n  const source = descriptor.value;\\n  descriptor.value = function (...data: any[]) {\\n    if (!this.ngZone) {\\n      throw new Error(\\n        \\"Class with \'OutsideZone\' decorator should have \'ngZone\' class property with \'NgZone\' class.\\"\\n      );\\n    }\\n    return this.ngZone.runOutsideAngular(() => source.call(this, ...data));\\n  };\\n  return descriptor;\\n}\\n","properties":[{"name":"ngZone","deprecated":false,"deprecationMessage":"","type":"NgZone","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]}],"injectables":[{"name":"EngineService","id":"injectable-EngineService-b321eda715e48605b71c80ee7b8835966d77c08ebe82545e91751789bc6212e15fa302f9ff5030720076fb99c647e66bc5546e3590b8654c2f7f6c959a239ff9","file":"libs/angular/src/lib/engine.service.ts","properties":[{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":12,"modifierKind":[122]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import {\\n  ComponentFactoryResolver,\\n  Injectable,\\n  Renderer2,\\n  RendererFactory2,\\n} from \'@angular/core\';\\nimport { DiagramEngine } from \'@rxzu/core\';\\nimport { FactoryService } from \'./factory.service\';\\n\\n@Injectable()\\nexport class EngineService extends DiagramEngine {\\n  protected _renderer: Renderer2;\\n\\n  constructor(\\n    protected resolver: ComponentFactoryResolver,\\n    protected rendererFactory: RendererFactory2,\\n    protected override factory: FactoryService\\n  ) {\\n    super(factory);\\n    this._renderer = this.rendererFactory.createRenderer(null, null);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"resolver","type":"ComponentFactoryResolver","deprecated":false,"deprecationMessage":""},{"name":"rendererFactory","type":"RendererFactory2","deprecated":false,"deprecationMessage":""},{"name":"factory","type":"FactoryService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"resolver","type":"ComponentFactoryResolver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rendererFactory","type":"RendererFactory2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"factory","type":"FactoryService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"DiagramEngine","type":"injectable"},{"name":"FactoryService","id":"injectable-FactoryService-f49dbf0de4b926e49c9ab0f84c0e3d1a5e54f99f1c50a4188f2ce3cbf02326b0f2b0276f03a841feae06982c497947a6f1d5b0319580ed5e003b921abbf641d3","file":"libs/angular/src/lib/factory.service.ts","properties":[],"methods":[{"name":"destroyWidget","args":[{"name":"widget","type":"ComponentRef<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"widget","type":"ComponentRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"detectChanges","args":[{"name":"widget","type":"ComponentRef<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"widget","type":"ComponentRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getHTMLElement","args":[{"name":"widget","type":"ComponentRef<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"HTMLElement","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"widget","type":"ComponentRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"resolveComponent","args":[{"type":"WidgetOptions<M | ViewContainerRef>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ComponentRef<any>","typeParameters":["M"],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"WidgetOptions<M | ViewContainerRef>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import {\\n  ComponentFactoryResolver,\\n  ComponentRef,\\n  Injectable,\\n  Injector,\\n  Type,\\n  ViewContainerRef,\\n} from \'@angular/core\';\\nimport {\\n  AbstractFactory,\\n  BaseModel,\\n  toRegistryKey,\\n  WidgetOptions,\\n} from \'@rxzu/core\';\\nimport { RegistryService } from \'./registry.service\';\\nimport { MODEL } from \'./injection.tokens\';\\n\\n@Injectable()\\nexport class FactoryService extends AbstractFactory<\\n  Type<any>,\\n  ComponentRef<any>\\n> {\\n  constructor(\\n    registry: RegistryService,\\n    private cfr: ComponentFactoryResolver\\n  ) {\\n    super(registry);\\n  }\\n\\n  getHTMLElement(widget: ComponentRef<any>): HTMLElement {\\n    return widget.location.nativeElement;\\n  }\\n\\n  destroyWidget(widget: ComponentRef<any>) {\\n    widget.destroy();\\n  }\\n\\n  override detectChanges(widget: ComponentRef<any>) {\\n    widget.changeDetectorRef.detectChanges();\\n  }\\n\\n  resolveComponent<M extends BaseModel>({\\n    model,\\n    host,\\n    index,\\n  }: WidgetOptions<M, ViewContainerRef>): ComponentRef<any> {\\n    const cmp = this.get(model);\\n    if (!cmp)\\n      throw new Error(\\n        `[RxZu] Couldn\'t find component for ${toRegistryKey(\\n          model.type,\\n          model.namespace\\n        )}`\\n      );\\n\\n    const injector = Injector.create({\\n      providers: [{ provide: MODEL, useValue: model }],\\n      parent: host.injector,\\n    });\\n\\n    const ref = host.createComponent(\\n      this.cfr.resolveComponentFactory(cmp),\\n      index,\\n      injector\\n    );\\n\\n    return ref;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"registry","type":"RegistryService","deprecated":false,"deprecationMessage":""},{"name":"cfr","type":"ComponentFactoryResolver","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"registry","type":"RegistryService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cfr","type":"ComponentFactoryResolver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"AbstractFactory","type":"injectable"},{"name":"RegistryService","id":"injectable-RegistryService-2f9c1279dd363fb3244575624b44010e9a8f4b7b28e712e49c72d8ff1866469c494be6eb63d13f04ccc5b09e840582229139f0539a06df84971eb36e1771e2fa","file":"libs/angular/src/lib/registry.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Inject, Injectable, Optional, SkipSelf, Type } from \'@angular/core\';\\nimport { AbstractRegistry } from \'@rxzu/core\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class RegistryService extends AbstractRegistry<Type<any>> {\\n  constructor(\\n    @Optional()\\n    @SkipSelf()\\n    @Inject(RegistryService)\\n    parent: RegistryService | null\\n  ) {\\n    super(parent);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"parent","type":"RegistryService | null","deprecated":false,"deprecationMessage":""}],"line":5,"jsdoctags":[{"name":"parent","type":"RegistryService | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"AbstractRegistry","type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"TemplateVarContext","id":"class-TemplateVarContext-bbf5c39a2b9cc0c92b4182863d9eb6c2cb9924a91d4284d46c1bbadd85af73935d983fb445b69c3f17e37bf90be4cd833d391c670b21b80d5d84ca168660288e","file":"libs/angular/src/lib/utils/template-var.directive.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import {\\n  Directive,\\n  EmbeddedViewRef,\\n  Input,\\n  TemplateRef,\\n  ViewContainerRef,\\n} from \'@angular/core\';\\n\\nclass TemplateVarContext {\\n  $implicit: any;\\n  templateVar: any;\\n}\\n\\n@Directive({\\n  // eslint-disable-next-line @angular-eslint/directive-selector\\n  selector: \'[templateVar]\',\\n})\\nexport class TemplateVarDirective {\\n  view: EmbeddedViewRef<any> | null = null;\\n\\n  protected context = new TemplateVarContext();\\n\\n  @Input()\\n  set templateVar(context: any) {\\n    this.context.$implicit = this.context.templateVar = context;\\n    this.updateView();\\n  }\\n\\n  constructor(\\n    protected vcRef: ViewContainerRef,\\n    protected templateRef: TemplateRef<any>\\n  ) {}\\n\\n  updateView() {\\n    if (!this.view) {\\n      this.vcRef.clear();\\n      this.view = this.vcRef.createEmbeddedView(this.templateRef, this.context);\\n    } else {\\n      this.view.markForCheck();\\n    }\\n  }\\n}\\n","properties":[{"name":"$implicit","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":10},{"name":"templateVar","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":11}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[{"name":"TemplateVarDirective","id":"directive-TemplateVarDirective-bbf5c39a2b9cc0c92b4182863d9eb6c2cb9924a91d4284d46c1bbadd85af73935d983fb445b69c3f17e37bf90be4cd833d391c670b21b80d5d84ca168660288e","file":"libs/angular/src/lib/utils/template-var.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  Directive,\\n  EmbeddedViewRef,\\n  Input,\\n  TemplateRef,\\n  ViewContainerRef,\\n} from \'@angular/core\';\\n\\nclass TemplateVarContext {\\n  $implicit: any;\\n  templateVar: any;\\n}\\n\\n@Directive({\\n  // eslint-disable-next-line @angular-eslint/directive-selector\\n  selector: \'[templateVar]\',\\n})\\nexport class TemplateVarDirective {\\n  view: EmbeddedViewRef<any> | null = null;\\n\\n  protected context = new TemplateVarContext();\\n\\n  @Input()\\n  set templateVar(context: any) {\\n    this.context.$implicit = this.context.templateVar = context;\\n    this.updateView();\\n  }\\n\\n  constructor(\\n    protected vcRef: ViewContainerRef,\\n    protected templateRef: TemplateRef<any>\\n  ) {}\\n\\n  updateView() {\\n    if (!this.view) {\\n      this.vcRef.clear();\\n      this.view = this.vcRef.createEmbeddedView(this.templateRef, this.context);\\n    } else {\\n      this.view.markForCheck();\\n    }\\n  }\\n}\\n","selector":"[templateVar]","providers":[],"inputsClass":[{"name":"templateVar","deprecated":false,"deprecationMessage":"","line":24,"type":"any","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"context","defaultValue":"new TemplateVarContext()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[122]},{"name":"view","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"EmbeddedViewRef<any> | null","optional":false,"description":"","line":19}],"methodsClass":[{"name":"updateView","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""}],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"vcRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""}],"line":27,"jsdoctags":[{"name":"vcRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"templateVar":{"name":"templateVar","setSignature":{"name":"templateVar","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"context","type":"any","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":24,"jsdoctags":[{"name":"context","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}}],"components":[{"name":"DefaultLabelComponent","id":"component-DefaultLabelComponent-bcac58f41f1bb4e72d1db46706b11e0688f7844e4ab70c949c9d2c0f64d15cb02e135fd61126e9f86362f0c5e1a8bedfcc9b254b17689779b96f43485118069d","file":"libs/angular/src/lib/defaults/components/default-label/default-label.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rxzu-default-label","styleUrls":["./default-label.component.scss"],"styles":[],"templateUrl":["./default-label.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"model","deprecated":false,"deprecationMessage":"","type":"LabelModel","optional":false,"description":"","line":19,"decorators":[{"name":"Inject","stringifiedArguments":"MODEL"}],"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  Inject,\\n  OnInit,\\n} from \'@angular/core\';\\nimport { LabelModel } from \'@rxzu/core\';\\nimport { MODEL } from \'../../../injection.tokens\';\\n\\n@Component({\\n  selector: \'rxzu-default-label\',\\n  templateUrl: \'./default-label.component.html\',\\n  styleUrls: [\'./default-label.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DefaultLabelComponent implements OnInit {\\n  constructor(\\n    @Inject(MODEL) public model: LabelModel,\\n    private cdRef: ChangeDetectorRef\\n  ) {}\\n\\n  ngOnInit() {\\n    this.model.selectCoords().subscribe(() => {\\n      this.cdRef.detectChanges();\\n    });\\n\\n    this.model.setPainted(true);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  position: absolute;\\n}\\n\\n.default-label {\\n  color: white;\\n  user-select: none;\\n}\\n","styleUrl":"./default-label.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"model","type":"LabelModel","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"model","type":"LabelModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div\\n  class=\\"default-label\\"\\n  [ngStyle]=\\"{\\n    transform:\\n      \'translate(\' +\\n      (model.selectCoords() | async)?.x +\\n      \'px, \' +\\n      (model.selectCoords() | async)?.y +\\n      \'px)\' +\\n      \'rotate(\' +\\n      (model.selectRotation() | async) +\\n      \'deg)\'\\n  }\\"\\n>\\n  {{ model.selectText() | async }}\\n</div>\\n"},{"name":"DefaultLinkComponent","id":"component-DefaultLinkComponent-7c8518d0e6a4899bc2949deb7cf706068f2bfb9d64c910a40090742fabb608abb8c341ffe67a70f9e2cb3892b720a57033dfaf349a54c23933bda7fdb0351b62","file":"libs/angular/src/lib/defaults/components/default-link/default-link.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rxzu-default-link","styleUrls":["./default-link.component.scss"],"styles":[],"templateUrl":["./default-link.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"labelLayer","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":24,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'labelLayer\', {read: ViewContainerRef, static: true}"}]},{"name":"model","deprecated":false,"deprecationMessage":"","type":"LinkModel","optional":false,"description":"","line":27,"decorators":[{"name":"Inject","stringifiedArguments":"MODEL"}],"modifierKind":[123]}],"methodsClass":[{"name":"calcCenterOfPath","args":[{"name":"firstPoint","type":"Coords","deprecated":false,"deprecationMessage":""},{"name":"secondPoint","type":"Coords","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Coords","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"firstPoint","type":"Coords","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"secondPoint","type":"Coords","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"calcLabelIncline","args":[{"name":"firstPoint","type":"Coords","deprecated":false,"deprecationMessage":""},{"name":"secondPoint","type":"Coords","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"firstPoint","type":"Coords","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"secondPoint","type":"Coords","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":""},{"name":"onHover","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":""},{"name":"trackByPoints","args":[{"name":"i","type":"number","deprecated":false,"deprecationMessage":""},{"name":"point","type":"PointModel","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"i","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"point","type":"PointModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  AfterViewInit,\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  Inject,\\n  OnInit,\\n  ViewChild,\\n  ViewContainerRef,\\n} from \'@angular/core\';\\nimport { PointModel, generateCurvePath, Coords, LinkModel } from \'@rxzu/core\';\\nimport { combineLatest } from \'rxjs\';\\nimport { takeUntil } from \'rxjs/operators\';\\nimport { MODEL } from \'../../../injection.tokens\';\\n\\n@Component({\\n  selector: \'rxzu-default-link\',\\n  templateUrl: \'./default-link.component.html\',\\n  styleUrls: [\'./default-link.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DefaultLinkComponent implements OnInit, AfterViewInit {\\n  @ViewChild(\'labelLayer\', { read: ViewContainerRef, static: true })\\n  labelLayer!: ViewContainerRef;\\n\\n  constructor(\\n    @Inject(MODEL) public model: LinkModel,\\n    private cdRef: ChangeDetectorRef\\n  ) {}\\n\\n  ngOnInit() {\\n    this.model.setPainted(true);\\n  }\\n\\n  trackByPoints(i: number, point: PointModel) {\\n    return point.id;\\n  }\\n\\n  onHover() {\\n    this.cdRef.detectChanges();\\n  }\\n\\n  ngAfterViewInit() {\\n    const firstPCoords$ = this.model.getFirstPoint().selectCoords();\\n    const lastPCoords$ = this.model.getLastPoint().selectCoords();\\n\\n    // Observe link coords and update drawing accordingly\\n    combineLatest([firstPCoords$, lastPCoords$])\\n      .pipe(takeUntil(this.model.onEntityDestroy()))\\n      .subscribe(([firstPCoords, lastPCoords]) => {\\n        const points = [firstPCoords, lastPCoords];\\n\\n        // handle regular links\\n        // draw the smoothing\\n        // if the points are too close, just draw a straight line\\n        const isHorizontal =\\n          Math.abs(firstPCoords.x - lastPCoords.x) >\\n          Math.abs(firstPCoords.y - lastPCoords.y);\\n        const xOrY = isHorizontal ? \'x\' : \'y\';\\n        let isStraight = false;\\n        if (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\\n          isStraight = true;\\n        }\\n\\n        const path = generateCurvePath(\\n          firstPCoords,\\n          lastPCoords,\\n          isStraight ? 0 : 50\\n        );\\n        this.model.setPath(path);\\n\\n        const label = this.model.getLabel();\\n\\n        // update label position\\n        if (label) {\\n          label.setCoords(this.calcCenterOfPath(firstPCoords, lastPCoords));\\n        }\\n\\n        this.cdRef.detectChanges();\\n      });\\n  }\\n\\n  calcLabelIncline(firstPoint: Coords, secondPoint: Coords): number {\\n    const dy = secondPoint.y - firstPoint.y;\\n    const dx = secondPoint.x - firstPoint.x;\\n\\n    if (dx === 0) {\\n      return 0;\\n    }\\n\\n    let inclineAngel = (Math.atan(dy / dx) * 180) / Math.PI;\\n\\n    if (inclineAngel < 0) {\\n      inclineAngel += 180;\\n    }\\n\\n    return inclineAngel;\\n  }\\n\\n  calcCenterOfPath(firstPoint: Coords, secondPoint: Coords): Coords {\\n    return {\\n      x: (firstPoint.x + secondPoint.x) / 2 + 20,\\n      y: (firstPoint.y + secondPoint.y) / 2 + 20,\\n    };\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  position: absolute;\\n}\\n\\n.link-container {\\n  position: relative;\\n  fill: none;\\n  overflow: visible;\\n  pointer-events: all;\\n}\\n\\n.default-link {\\n  fill: none;\\n  overflow: visible;\\n\\n  @keyframes dash {\\n    from {\\n      stroke-dashoffset: 24;\\n    }\\n    to {\\n      stroke-dashoffset: 0;\\n    }\\n  }\\n\\n  &.hovered {\\n    stroke: rgb(0, 192, 255);\\n    stroke-dasharray: 10, 2;\\n    animation: dash 1s linear infinite;\\n  }\\n}\\n\\n.default-point {\\n  color: lightgray;\\n  overflow: visible;\\n  pointer-events: all;\\n\\n  &.hovered {\\n    color: rgb(0, 192, 255);\\n  }\\n}\\n","styleUrl":"./default-link.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"model","type":"LinkModel","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"model","type":"LinkModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","AfterViewInit"],"templateData":"\x3c!-- Label Host --\x3e\\n<ng-template #labelLayer></ng-template>\\n\\n<svg class=\\"link-container\\">\\n  \x3c!-- Link --\x3e\\n  <g [id]=\\"model.id\\">\\n    <path\\n      class=\\"default-link\\"\\n      stroke-width=\\"1\\"\\n      stroke=\\"white\\"\\n      [attr.d]=\\"model.selectPath() | async\\"\\n      (mouseleave)=\\"model.setHovered(false); onHover()\\"\\n      (mouseenter)=\\"model.setHovered(); onHover()\\"\\n      [ngClass]=\\"{ hovered: model.selectHovered() | async }\\"\\n    ></path>\\n    <path\\n      class=\\"default-link\\"\\n      stroke=\\"blue\\"\\n      stroke-linecap=\\"round\\"\\n      (mouseleave)=\\"model.setHovered(false); onHover()\\"\\n      (mouseenter)=\\"model.setHovered(); onHover()\\"\\n      [attr.stroke-width]=\\"20\\"\\n      [attr.data-type]=\\"model.type\\"\\n      [attr.data-id]=\\"model.id\\"\\n      [attr.stroke-opacity]=\\"(model.selectHovered() | async) ? \'0.1\' : \'0\'\\"\\n      [attr.d]=\\"model.selectPath() | async\\"\\n    ></path>\\n  </g>\\n\\n  \x3c!-- Points --\x3e\\n  <g\\n    *ngFor=\\"let point of model.getPoints(); trackBy: trackByPoints\\"\\n    [id]=\\"point.id\\"\\n  >\\n    <circle\\n      fill=\\"currentColor\\"\\n      [attr.cx]=\\"point.selectX() | async\\"\\n      [attr.cy]=\\"point.selectY() | async\\"\\n      r=\\"5\\"\\n      class=\\"default-point\\"\\n      [ngClass]=\\"{ hovered: point.selectHovered() | async }\\"\\n    />\\n    <circle\\n      [attr.data-type]=\\"point.type\\"\\n      [attr.data-id]=\\"point.id\\"\\n      [attr.data-parent-id]=\\"model.id\\"\\n      (mouseleave)=\\"point.setHovered(false); model.setHovered(false)\\"\\n      (mouseenter)=\\"point.setHovered(); model.setHovered()\\"\\n      [attr.cx]=\\"point.selectX() | async\\"\\n      [attr.cy]=\\"point.selectY() | async\\"\\n      r=\\"15\\"\\n      [attr.opacity]=\\"0\\"\\n      [ngClass]=\\"{ selected: point.selectSelected() | async }\\"\\n    />\\n  </g>\\n</svg>\\n"},{"name":"DefaultNodeComponent","id":"component-DefaultNodeComponent-f1f7a3c5ea9b53da81a9612318df98607791e6bd612bc33d3c5c80e12c058d37ec21b1417cac8ac321fda2cb1cccb8652732399b9b39be4849f0dddf22fa58b9","file":"libs/angular/src/lib/defaults/components/default-node/default-node.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rxzu-default-node","styleUrls":["./default-node.component.scss"],"styles":[],"templateUrl":["./default-node.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"model","deprecated":false,"deprecationMessage":"","type":"NodeModel","optional":false,"description":"","line":39,"decorators":[{"name":"Inject","stringifiedArguments":"MODEL"}],"modifierKind":[123]},{"name":"portDiffers","deprecated":false,"deprecationMessage":"","type":"IterableDiffer<PortModel>","optional":false,"description":"","line":34,"modifierKind":[121]},{"name":"portsLayer","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":36,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'portsLayer\', {read: ViewContainerRef, static: true}"}]}],"methodsClass":[{"name":"applyPortChanges","args":[{"name":"changes","type":"IterableChanges<PortModel> | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"changes","type":"IterableChanges<PortModel> | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPortsHost","args":[],"optional":false,"returnType":"ViewContainerRef","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"updatePorts","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  Inject,\\n  IterableChanges,\\n  IterableDiffer,\\n  IterableDiffers,\\n  OnInit,\\n  ViewChild,\\n  ViewContainerRef,\\n} from \'@angular/core\';\\nimport { NodeModel, PortModel } from \'@rxzu/core\';\\nimport { MODEL } from \'../../../injection.tokens\';\\nimport {\\n  filter,\\n  mapTo,\\n  pluck,\\n  switchMap,\\n  take,\\n  takeUntil,\\n  tap,\\n} from \'rxjs/operators\';\\nimport { combineLatest } from \'rxjs\';\\nimport { RxZuDiagramComponent } from \'../../../diagram/diagram.component\';\\nimport { EngineService } from \'../../../engine.service\';\\n\\n@Component({\\n  selector: \'rxzu-default-node\',\\n  templateUrl: \'./default-node.component.html\',\\n  styleUrls: [\'./default-node.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DefaultNodeComponent implements OnInit {\\n  private portDiffers: IterableDiffer<PortModel>;\\n  @ViewChild(\'portsLayer\', { read: ViewContainerRef, static: true })\\n  portsLayer!: ViewContainerRef;\\n\\n  constructor(\\n    @Inject(MODEL) public model: NodeModel,\\n    private engine: EngineService,\\n    private diagram: RxZuDiagramComponent,\\n    private iterableDiffers: IterableDiffers\\n  ) {\\n    this.portDiffers = this.iterableDiffers\\n      .find([])\\n      .create<PortModel>((index, item) => item.id);\\n  }\\n\\n  ngOnInit() {\\n    this.updatePorts();\\n  }\\n\\n  getPortsHost() {\\n    return this.portsLayer;\\n  }\\n\\n  updatePorts(): void {\\n    this.model\\n      .selectPorts()\\n      .pipe(\\n        takeUntil(this.model.onEntityDestroy()),\\n        filter(\\n          (ports: PortModel[] | null | undefined): ports is PortModel[] =>\\n            ports !== null && ports !== undefined\\n        ),\\n        tap((ports) => this.applyPortChanges(this.portDiffers.diff(ports))),\\n        switchMap((ports) =>\\n          combineLatest(\\n            ports.map((port) =>\\n              port\\n                .paintChanges()\\n                .pipe(pluck(\'isPainted\'), filter<boolean>(Boolean), take(1))\\n            )\\n          )\\n        ),\\n        filter((val) => val !== null),\\n        mapTo(true)\\n      )\\n      .subscribe(\\n        () => !this.model.getPainted().isPainted && this.model.setPainted(true)\\n      );\\n  }\\n\\n  private applyPortChanges(changes: IterableChanges<PortModel> | null): void {\\n    if (changes) {\\n      const canvasManager = this.engine.getCanvasManager();\\n      changes.forEachAddedItem(({ item }) => {\\n        canvasManager.paintModel(item, this.getPortsHost());\\n        item.setParent(this.model);\\n        this.model.updatePortCoords(item, this.diagram.diagramEngine);\\n      });\\n\\n      changes.forEachMovedItem(({ item }) => {\\n        this.model.updatePortCoords(item, this.diagram.diagramEngine);\\n      });\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  position: absolute;\\n}\\n\\n.default-node {\\n  &.selected {\\n    background-color: honeydew;\\n  }\\n\\n  &.hovered {\\n    background-color: gainsboro;\\n  }\\n\\n  display: block;\\n  width: 200px;\\n  height: 200px;\\n  pointer-events: all;\\n  border-radius: 10px;\\n  user-select: none;\\n  cursor: auto;\\n  background-color: white;\\n}\\n\\n.ports {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n","styleUrl":"./default-node.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"model","type":"NodeModel","deprecated":false,"deprecationMessage":""},{"name":"engine","type":"EngineService","deprecated":false,"deprecationMessage":""},{"name":"diagram","type":"RxZuDiagramComponent","deprecated":false,"deprecationMessage":""},{"name":"iterableDiffers","type":"IterableDiffers","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"model","type":"NodeModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"engine","type":"EngineService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"diagram","type":"RxZuDiagramComponent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"iterableDiffers","type":"IterableDiffers","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div\\n  class=\\"default-node\\"\\n  [ngClass]=\\"{\\n    selected: model.selectSelected() | async,\\n    hovered: model.selectHovered() | async\\n  }\\"\\n  (mouseover)=\\"model.setHovered()\\"\\n  (mouseout)=\\"model.setHovered(false)\\"\\n>\\n  <div class=\\"ports\\">\\n    <ng-template #portsLayer></ng-template>\\n  </div>\\n</div>\\n"},{"name":"DefaultPortComponent","id":"component-DefaultPortComponent-2ce202f66e2559f29a8710acbd8f43e6d600295e80dc09fc9a26f52daba4d60f35f6ec8d71f70ee343c880553b2b854739e9809e8b76c700639ea4a8493d44af","file":"libs/angular/src/lib/defaults/components/default-port/default-port.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rxzu-default-port","styleUrls":["./default-port.component.scss"],"styles":[],"templateUrl":["./default-port.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"model","deprecated":false,"deprecationMessage":"","type":"PortModel","optional":false,"description":"","line":17,"decorators":[{"name":"Inject","stringifiedArguments":"MODEL"}],"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  Inject,\\n  OnInit,\\n} from \'@angular/core\';\\nimport { PortModel } from \'@rxzu/core\';\\nimport { MODEL } from \'../../../injection.tokens\';\\n\\n@Component({\\n  selector: \'rxzu-default-port\',\\n  templateUrl: \'./default-port.component.html\',\\n  styleUrls: [\'./default-port.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DefaultPortComponent implements OnInit {\\n  constructor(@Inject(MODEL) public model: PortModel) {}\\n\\n  ngOnInit() {\\n    this.model.setPainted(true);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  position: relative;\\n  width: 10px;\\n  height: 10px;\\n  border-radius: 60px;\\n  border: 1px solid gray;\\n  background-color: lightgray;\\n  margin: 10px 0;\\n}\\n","styleUrl":"./default-port.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"model","type":"PortModel","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"model","type":"PortModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div draggable=\\"false\\"></div>\\n"},{"name":"RxZuDiagramComponent","id":"component-RxZuDiagramComponent-7fbe73ebef1e279f970e738460fb65486a9e9bc7ec64aed6e5b7fb0328ee72b8212b6898311faf93aa4d2d5438930597e507c702fdf3ebecfa5eacb832ccbd41","file":"libs/angular/src/lib/diagram/diagram.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"RxzuDiagram","inputs":[],"outputs":[],"providers":[{"name":"EngineService"},{"name":"RegistryService"},{"name":"FactoryService"}],"selector":"rxzu-diagram","styleUrls":["diagram.component.scss"],"styles":[],"templateUrl":["diagram.component.html"],"viewProviders":[],"inputsClass":[{"name":"model","deprecated":false,"deprecationMessage":"","line":45,"type":"DiagramModel","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","rawdescription":"\\nThe name of the diagram, if not set will be `\'default\'`","description":"<p>The name of the diagram, if not set will be <code>&#39;default&#39;</code></p>\\n","line":44,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":46,"type":"Partial<EngineSetup>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"actionsManager","deprecated":false,"deprecationMessage":"","type":"ActionsManager","optional":false,"description":"","line":61},{"name":"canvas","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":true,"description":"","line":55,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'canvas\', {read: ElementRef, static: true}"}]},{"name":"canvasManager","deprecated":false,"deprecationMessage":"","type":"CanvasManager","optional":false,"description":"","line":60},{"name":"diagramEngine","deprecated":false,"deprecationMessage":"","type":"EngineService","optional":false,"description":"","line":68,"modifierKind":[123,144]},{"name":"keyboardManager","deprecated":false,"deprecationMessage":"","type":"KeyboardManager","optional":false,"description":"","line":59},{"name":"linksLayer","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":true,"description":"","line":52,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'linksLayer\', {read: ViewContainerRef, static: true}"}]},{"name":"mouseManager","deprecated":false,"deprecationMessage":"","type":"MouseManager","optional":false,"description":"","line":58},{"name":"ngZone","deprecated":false,"deprecationMessage":"","type":"NgZone","optional":false,"description":"","line":69,"modifierKind":[123]},{"name":"nodesLayer","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":true,"description":"","line":49,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'nodesLayer\', {read: ViewContainerRef, static: true}"}]},{"name":"selectionBox$","deprecated":false,"deprecationMessage":"","type":"Observable<SelectingAction | null>","optional":true,"description":"","line":57}],"methodsClass":[{"name":"getLinksLayer","args":[],"optional":false,"returnType":"HTMLDivElement | null","typeParameters":[],"line":241,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"getNodesLayer","args":[],"optional":false,"returnType":"HTMLDivElement | null","typeParameters":[],"line":233,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"initNodes","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"initSelectionBox","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"initSubs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":215,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":""},{"name":"onCopy","args":[{"name":"event","type":"ClipboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:copy\', [\'$event\']"}],"modifierKind":[122],"jsdoctags":[{"name":"event","type":"ClipboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyUp","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"OutsideZone"}],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMouseDown","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"OutsideZone"}],"jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMouseMove","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"OutsideZone"}],"modifierKind":[122],"jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMouseUp","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"OutsideZone"}],"modifierKind":[122],"jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMouseWheel","args":[{"name":"event","type":"WheelEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":199,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"OutsideZone"}],"jsdoctags":[{"name":"event","type":"WheelEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onPaste","args":[{"name":"event","type":"ClipboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":184,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:paste\', [\'$event\']"}],"modifierKind":[122],"jsdoctags":[{"name":"event","type":"ClipboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setLayerStyles","args":[{"name":"x","type":"number","deprecated":false,"deprecationMessage":""},{"name":"y","type":"number","deprecated":false,"deprecationMessage":""},{"name":"zoom","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":204,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"OutsideZone"}],"modifierKind":[122],"jsdoctags":[{"name":"x","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"y","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"zoom","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"zoomToFit","args":[{"name":"additionalZoomFactor","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nzoom the canvas to fit all nodes inside the view.\\n","description":"<p>zoom the canvas to fit all nodes inside the view.</p>\\n","jsdoctags":[{"name":{"pos":3142,"end":3162,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"additionalZoomFactor"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3136,"end":3141,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>additional margins to the zooming factor</p>\\n"}]},{"name":"zoomToNodes","args":[{"name":"nodes","type":"NodeModel[]","deprecated":false,"deprecationMessage":""},{"name":"margin","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100"}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n\\n","description":"","jsdoctags":[{"name":{"pos":3345,"end":3350,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"nodes"},"type":"NodeModel[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":3339,"end":3344,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>zoom the canvas to the selected nodes</p>\\n"},{"name":{"pos":3401,"end":3407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"margin"},"type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100","tagName":{"pos":3395,"end":3400,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>additional margins to the zooming factor</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:copy","args":[{"name":"event","type":"ClipboardEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":179},{"name":"window:paste","args":[{"name":"event","type":"ClipboardEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":184}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  ElementRef,\\n  Inject,\\n  HostListener,\\n  Input,\\n  NgZone,\\n  OnDestroy,\\n  Renderer2,\\n  ViewChild,\\n  ViewContainerRef,\\n  OnInit,\\n} from \'@angular/core\';\\nimport { combineLatest, noop, Observable, of } from \'rxjs\';\\nimport { map, switchMap, takeUntil, tap } from \'rxjs/operators\';\\nimport {\\n  SelectingAction,\\n  MouseManager,\\n  DiagramModel,\\n  EngineSetup,\\n  KeyboardManager,\\n  NodeModel,\\n  CanvasManager,\\n  ActionsManager,\\n} from \'@rxzu/core\';\\nimport { ZonedClass, OutsideZone } from \'../utils\';\\nimport { EngineService } from \'../engine.service\';\\nimport { RegistryService } from \'../registry.service\';\\nimport { FactoryService } from \'../factory.service\';\\nimport { DIAGRAM_DEFAULT_OPTIONS } from \'../injection.tokens\';\\n\\n@Component({\\n  selector: \'rxzu-diagram\',\\n  exportAs: \'RxzuDiagram\',\\n  templateUrl: \'diagram.component.html\',\\n  styleUrls: [\'diagram.component.scss\'],\\n  providers: [EngineService, RegistryService, FactoryService],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class RxZuDiagramComponent implements OnInit, OnDestroy, ZonedClass {\\n  /** The name of the diagram, if not set will be `\'default\'` */\\n  @Input() name?: string;\\n  @Input() model!: DiagramModel;\\n  @Input() options?: Partial<EngineSetup>;\\n\\n  @ViewChild(\'nodesLayer\', { read: ViewContainerRef, static: true })\\n  nodesLayer?: ViewContainerRef;\\n\\n  @ViewChild(\'linksLayer\', { read: ViewContainerRef, static: true })\\n  linksLayer?: ViewContainerRef;\\n\\n  @ViewChild(\'canvas\', { read: ElementRef, static: true })\\n  canvas?: ElementRef;\\n\\n  selectionBox$?: Observable<SelectingAction | null>;\\n  mouseManager: MouseManager;\\n  keyboardManager: KeyboardManager;\\n  canvasManager: CanvasManager;\\n  actionsManager: ActionsManager;\\n\\n  get host(): HTMLElement {\\n    return this.elRef.nativeElement;\\n  }\\n\\n  constructor(\\n    public readonly diagramEngine: EngineService,\\n    public ngZone: NgZone,\\n    protected renderer: Renderer2,\\n    protected cdRef: ChangeDetectorRef,\\n    protected elRef: ElementRef<HTMLElement>,\\n    @Inject(DIAGRAM_DEFAULT_OPTIONS) protected defaultOptions: EngineSetup\\n  ) {\\n    this.mouseManager = this.diagramEngine.getMouseManager();\\n    this.keyboardManager = this.diagramEngine.getKeyboardManager();\\n    this.canvasManager = this.diagramEngine.getCanvasManager();\\n    this.actionsManager = this.diagramEngine.getActionsManager();\\n  }\\n\\n  ngOnInit() {\\n    this.options = { ...this.defaultOptions, ...this.options };\\n    this.model =\\n      (this.model && this.diagramEngine.setModel(this.model)) ||\\n      this.diagramEngine.createModel({\\n        namespace: this.name || \'default\',\\n        ...this.options,\\n      });\\n\\n    if (!this.canvas) {\\n      return;\\n    }\\n\\n    this.canvasManager.setCanvas(this.canvas.nativeElement);\\n\\n    this.diagramEngine.setup({\\n      ...this.options,\\n    } as EngineSetup);\\n\\n    this.initNodes();\\n    this.initSelectionBox();\\n    this.initSubs();\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.keyboardManager) {\\n      this.keyboardManager.dispose();\\n    }\\n\\n    this.model.destroy();\\n  }\\n\\n  /**\\n   * zoom the canvas to fit all nodes inside the view.\\n   * @param additionalZoomFactor additional margins to the zooming factor\\n   */\\n  zoomToFit(additionalZoomFactor?: number): void {\\n    this.diagramEngine.zoomToFit(additionalZoomFactor);\\n  }\\n\\n  /**\\n   *\\n   * @param nodes zoom the canvas to the selected nodes\\n   * @param margin additional margins to the zooming factor\\n   */\\n  zoomToNodes(nodes: NodeModel[], margin = 100): void {\\n    this.diagramEngine.zoomToNodes(nodes, margin);\\n  }\\n\\n  protected initNodes(): void {\\n    this.canvasManager\\n      .paintNodes(this.nodesLayer)\\n      .pipe(\\n        takeUntil(this.model.onEntityDestroy()),\\n        switchMap(() => {\\n          if (!this.diagramEngine) {\\n            return of(null);\\n          }\\n\\n          return this.canvasManager.paintLinks(this.linksLayer);\\n        })\\n      )\\n      .subscribe();\\n  }\\n\\n  protected initSelectionBox() {\\n    if (!this.diagramEngine) {\\n      return;\\n    }\\n\\n    this.selectionBox$ = this.actionsManager.observeActions().pipe(\\n      map((a) => {\\n        if (\\n          a &&\\n          a.action &&\\n          a.action instanceof SelectingAction &&\\n          a.state === \'firing\'\\n        ) {\\n          return a.action as SelectingAction;\\n        } else {\\n          return null;\\n        }\\n      }),\\n      tap(() => this.cdRef.detectChanges())\\n    );\\n  }\\n\\n  @OutsideZone\\n  protected onMouseUp(event: MouseEvent) {\\n    this.mouseManager ? this.mouseManager.onMouseUp(event) : noop();\\n  }\\n\\n  @OutsideZone\\n  onKeyUp(event: KeyboardEvent) {\\n    this.keyboardManager ? this.keyboardManager.onKeyUp(event) : noop();\\n  }\\n\\n  @HostListener(\'window:copy\', [\'$event\'])\\n  protected onCopy(event: ClipboardEvent) {\\n    this.keyboardManager ? this.keyboardManager.onCopy() : noop();\\n  }\\n\\n  @HostListener(\'window:paste\', [\'$event\'])\\n  protected onPaste(event: ClipboardEvent) {\\n    this.keyboardManager ? this.keyboardManager.onPaste() : noop();\\n  }\\n\\n  @OutsideZone\\n  protected onMouseMove(event: MouseEvent) {\\n    this.mouseManager ? this.mouseManager.onMouseMove(event) : noop();\\n  }\\n\\n  @OutsideZone\\n  onMouseDown(event: MouseEvent) {\\n    this.mouseManager ? this.mouseManager.onMouseDown(event) : noop();\\n  }\\n\\n  @OutsideZone\\n  onMouseWheel(event: WheelEvent) {\\n    this.mouseManager ? this.mouseManager.onMouseWheel(event) : noop();\\n  }\\n\\n  @OutsideZone\\n  protected setLayerStyles(x: number, y: number, zoom: number): void {\\n    const nodesLayer = this.getNodesLayer();\\n    const linksLayer = this.getLinksLayer();\\n\\n    const style = \'transform\';\\n    const value = `translate(${x}px, ${y}px) scale(${zoom / 100.0})`;\\n\\n    this.renderer.setStyle(nodesLayer, style, value);\\n    this.renderer.setStyle(linksLayer, style, value);\\n  }\\n\\n  protected initSubs() {\\n    const diagramModel = this.diagramEngine?.getDiagramModel();\\n    if (!diagramModel) {\\n      return;\\n    }\\n\\n    combineLatest([\\n      diagramModel.selectOffsetX(),\\n      diagramModel.selectOffsetY(),\\n      diagramModel.selectZoomLevel(),\\n    ])\\n      .pipe(\\n        takeUntil(this.model.onEntityDestroy()),\\n        tap(([x, y, zoom]) => this.setLayerStyles(x, y, zoom))\\n      )\\n      .subscribe();\\n  }\\n\\n  protected getNodesLayer(): HTMLDivElement | null {\\n    if (!this.host) {\\n      return null;\\n    }\\n\\n    return this.nodesLayer?.element.nativeElement.parentElement;\\n  }\\n\\n  protected getLinksLayer(): HTMLDivElement | null {\\n    if (!this.host) {\\n      return null;\\n    }\\n\\n    return this.linksLayer?.element.nativeElement.parentElement;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".rxzu-diagram {\\n  position: relative;\\n  flex-grow: 1;\\n  display: flex;\\n  cursor: move;\\n  overflow: hidden;\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\\n  .selector {\\n    position: absolute;\\n    background-color: rgba(0, 192, 255, 0.2);\\n    border: solid 2px rgb(0, 192, 255);\\n  }\\n\\n  .rxzu-nodes-layer {\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    transform-origin: 0 0;\\n    overflow: visible;\\n    pointer-events: none;\\n    z-index: 150;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n  }\\n\\n  .rxzu-links-layer {\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    transform-origin: 0 0;\\n    overflow: visible;\\n    pointer-events: none;\\n    z-index: 100;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n  }\\n}\\n","styleUrl":"diagram.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"diagramEngine","type":"EngineService","deprecated":false,"deprecationMessage":""},{"name":"ngZone","type":"NgZone","deprecated":false,"deprecationMessage":""},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""},{"name":"elRef","type":"ElementRef<HTMLElement>","deprecated":false,"deprecationMessage":""},{"name":"defaultOptions","type":"EngineSetup","deprecated":false,"deprecationMessage":""}],"line":65,"jsdoctags":[{"name":"diagramEngine","type":"EngineService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"ngZone","type":"NgZone","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"elRef","type":"ElementRef<HTMLElement>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultOptions","type":"EngineSetup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","ZonedClass"],"accessors":{"host":{"name":"host","getSignature":{"name":"host","type":"","returnType":"HTMLElement","line":63}}},"templateData":"<div\\n  class=\\"rxzu-diagram\\"\\n  #canvas\\n  (mousedown)=\\"onMouseDown($event)\\"\\n  (wheel)=\\"onMouseWheel($event)\\"\\n  (keyup)=\\"onKeyUp($event)\\"\\n  tabindex=\\"1\\"\\n>\\n  \x3c!-- Nodes Layer --\x3e\\n  <div class=\\"rxzu-nodes-layer\\">\\n    <ng-template #nodesLayer></ng-template>\\n  </div>\\n\\n  \x3c!-- Links Layer --\x3e\\n  <div class=\\"rxzu-links-layer\\">\\n    <ng-template #linksLayer></ng-template>\\n  </div>\\n\\n  \x3c!-- Selection Box --\x3e\\n  <div\\n    *ngIf=\\"selectionBox$ | async as selectionBox\\"\\n    class=\\"selector\\"\\n    [ngStyle]=\\"{\\n      top: selectionBox?.dimensions?.top + \'px\',\\n      left: selectionBox?.dimensions?.left + \'px\',\\n      width: selectionBox?.dimensions?.width + \'px\',\\n      height: selectionBox?.dimensions?.height + \'px\'\\n    }\\"\\n  ></div>\\n</div>\\n"}],"modules":[{"name":"RxZuDefaultsModule","id":"module-RxZuDefaultsModule-572849951a93cdd020fd4b3c6c7f4c7460077008b9708771da4d35b7e6f7f3e9c77f87c7d8968b89d8bd82af5e97422ceec6abc929e6e19e75554e467dcab18e","description":"","deprecationMessage":"","deprecated":false,"file":"libs/angular/src/lib/defaults/defaults.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RxZuModule } from \'../main.module\';\\nimport { ComponentProviderOptions } from \'../injection.tokens\';\\nimport { DefaultLinkComponent } from \'./components/default-link/default-link.component\';\\nimport { DefaultLabelComponent } from \'./components/default-label/default-label.component\';\\nimport { DefaultNodeComponent } from \'./components/default-node/default-node.component\';\\nimport { DefaultPortComponent } from \'./components/default-port/default-port.component\';\\n\\nconst DEFAULTS: ComponentProviderOptions[] = [\\n  {\\n    type: \'node\',\\n    component: DefaultNodeComponent,\\n  },\\n  {\\n    type: \'port\',\\n    component: DefaultPortComponent,\\n  },\\n  {\\n    type: \'link\',\\n    component: DefaultLinkComponent,\\n  },\\n  {\\n    type: \'label\',\\n    component: DefaultLabelComponent,\\n  },\\n];\\n\\nconst COMPONENTS = [\\n  DefaultLinkComponent,\\n  DefaultLabelComponent,\\n  DefaultPortComponent,\\n  DefaultNodeComponent,\\n];\\n\\n@NgModule({\\n  declarations: [...COMPONENTS],\\n  imports: [CommonModule, RxZuModule.withComponents(DEFAULTS)],\\n  entryComponents: [...COMPONENTS],\\n  exports: [...COMPONENTS, RxZuModule],\\n})\\nexport class RxZuDefaultsModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DefaultLabelComponent"},{"name":"DefaultLinkComponent"},{"name":"DefaultNodeComponent"},{"name":"DefaultPortComponent"}]},{"type":"imports","elements":[{"name":"RxZuModule"}]},{"type":"exports","elements":[{"name":"DefaultLabelComponent"},{"name":"DefaultLinkComponent"},{"name":"DefaultNodeComponent"},{"name":"DefaultPortComponent"},{"name":"RxZuModule"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"RxZuModule","id":"module-RxZuModule-b9b091b24bac142b7c258994b491ae2068debd2bf4fb7a8fb4fceda8ae0f0374d2adff20af0bd3b633fe4797df29b9c885672b21d089e683b8c8f777119aeecf","description":"","deprecationMessage":"","deprecated":false,"file":"libs/angular/src/lib/main.module.ts","methods":[{"name":"registerComponent","args":[{"type":"ComponentProviderOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Provider","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"type":"ComponentProviderOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"withComponents","args":[{"name":"components","type":"ComponentProviderOptions | ComponentProviderOptions[]","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"ModuleWithProviders<RxZuModule>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"components","type":"ComponentProviderOptions | ComponentProviderOptions[]","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport {\\n  Inject,\\n  ModuleWithProviders,\\n  NgModule,\\n  Optional,\\n  Provider,\\n} from \'@angular/core\';\\nimport { RxZuDiagramComponent } from \'./diagram/diagram.component\';\\nimport { TemplateVarDirective } from \'./utils\';\\nimport { COMPONENT, ComponentProviderOptions } from \'./injection.tokens\';\\nimport { RegistryService } from \'./registry.service\';\\nimport { toRegistryKey } from \'@rxzu/core\';\\n\\n@NgModule({\\n  declarations: [RxZuDiagramComponent, TemplateVarDirective],\\n  imports: [CommonModule],\\n  exports: [RxZuDiagramComponent],\\n})\\nexport class RxZuModule {\\n  constructor(\\n    registry: RegistryService,\\n    @Inject(COMPONENT) @Optional() components: ComponentProviderOptions[]\\n  ) {\\n    components?.forEach(({ type, namespace: name, component }) =>\\n      registry.set(toRegistryKey(type, name), component)\\n    );\\n  }\\n\\n  static registerComponent({\\n    type,\\n    namespace,\\n    component,\\n  }: ComponentProviderOptions): Provider {\\n    return {\\n      provide: COMPONENT,\\n      multi: true,\\n      useValue: { type, namespace, component },\\n    };\\n  }\\n\\n  static withComponents(\\n    components?: ComponentProviderOptions | ComponentProviderOptions[]\\n  ): ModuleWithProviders<RxZuModule> {\\n    return {\\n      ngModule: RxZuModule,\\n      providers: [\\n        ...([] as ComponentProviderOptions[])\\n          .concat(components || [])\\n          .map(RxZuModule.registerComponent),\\n      ],\\n    };\\n  }\\n}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"RxZuDiagramComponent"},{"name":"TemplateVarDirective"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"RxZuDiagramComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"COMPONENT","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/injection.tokens.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<Omit<ComponentProviderOptions, type>>","defaultValue":"new InjectionToken(\'COMPONENT\')"},{"name":"COMPONENTS","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/defaults/defaults.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  DefaultLinkComponent,\\n  DefaultLabelComponent,\\n  DefaultPortComponent,\\n  DefaultNodeComponent,\\n]"},{"name":"DEFAULTS","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/defaults/defaults.module.ts","deprecated":false,"deprecationMessage":"","type":"ComponentProviderOptions[]","defaultValue":"[\\n  {\\n    type: \'node\',\\n    component: DefaultNodeComponent,\\n  },\\n  {\\n    type: \'port\',\\n    component: DefaultPortComponent,\\n  },\\n  {\\n    type: \'link\',\\n    component: DefaultLinkComponent,\\n  },\\n  {\\n    type: \'label\',\\n    component: DefaultLabelComponent,\\n  },\\n]"},{"name":"DIAGRAM_DEFAULT_OPTIONS","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/injection.tokens.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<EngineSetup>","defaultValue":"new InjectionToken(\\n  \'DIAGRAM_DEFAULT_OPTIONS\',\\n  {\\n    providedIn: \'root\',\\n    factory: function () {\\n      return {\\n        allowCanvasZoom: true,\\n        allowCanvasTranslation: true,\\n        inverseZoom: true,\\n        allowLooseLinks: true,\\n        maxZoomOut: 0,\\n        maxZoomIn: 0,\\n        portMagneticRadius: 30,\\n      } as EngineSetup;\\n    },\\n  }\\n)"},{"name":"MODEL","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/injection.tokens.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<BaseModel>","defaultValue":"new InjectionToken(\'MODEL\')"}],"functions":[{"name":"OutsideZone","file":"libs/angular/src/lib/utils/decorators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"targetClass","type":"T","deprecated":false,"deprecationMessage":""},{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"descriptor","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"targetClass","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"descriptor","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[],"enumerations":[],"groupedVariables":{"libs/angular/src/lib/injection.tokens.ts":[{"name":"COMPONENT","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/injection.tokens.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<Omit<ComponentProviderOptions, type>>","defaultValue":"new InjectionToken(\'COMPONENT\')"},{"name":"DIAGRAM_DEFAULT_OPTIONS","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/injection.tokens.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<EngineSetup>","defaultValue":"new InjectionToken(\\n  \'DIAGRAM_DEFAULT_OPTIONS\',\\n  {\\n    providedIn: \'root\',\\n    factory: function () {\\n      return {\\n        allowCanvasZoom: true,\\n        allowCanvasTranslation: true,\\n        inverseZoom: true,\\n        allowLooseLinks: true,\\n        maxZoomOut: 0,\\n        maxZoomIn: 0,\\n        portMagneticRadius: 30,\\n      } as EngineSetup;\\n    },\\n  }\\n)"},{"name":"MODEL","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/injection.tokens.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<BaseModel>","defaultValue":"new InjectionToken(\'MODEL\')"}],"libs/angular/src/lib/defaults/defaults.module.ts":[{"name":"COMPONENTS","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/defaults/defaults.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  DefaultLinkComponent,\\n  DefaultLabelComponent,\\n  DefaultPortComponent,\\n  DefaultNodeComponent,\\n]"},{"name":"DEFAULTS","ctype":"miscellaneous","subtype":"variable","file":"libs/angular/src/lib/defaults/defaults.module.ts","deprecated":false,"deprecationMessage":"","type":"ComponentProviderOptions[]","defaultValue":"[\\n  {\\n    type: \'node\',\\n    component: DefaultNodeComponent,\\n  },\\n  {\\n    type: \'port\',\\n    component: DefaultPortComponent,\\n  },\\n  {\\n    type: \'link\',\\n    component: DefaultLinkComponent,\\n  },\\n  {\\n    type: \'label\',\\n    component: DefaultLabelComponent,\\n  },\\n]"}]},"groupedFunctions":{"libs/angular/src/lib/utils/decorators.ts":[{"name":"OutsideZone","file":"libs/angular/src/lib/utils/decorators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"targetClass","type":"T","deprecated":false,"deprecationMessage":""},{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"descriptor","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"targetClass","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"descriptor","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{},"groupedTypeAliases":{}},"routes":[],"coverage":{"count":0,"status":"low","files":[{"filePath":"libs/angular/src/lib/defaults/components/default-label/default-label.component.ts","type":"component","linktype":"component","name":"DefaultLabelComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/angular/src/lib/defaults/components/default-link/default-link.component.ts","type":"component","linktype":"component","name":"DefaultLinkComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/angular/src/lib/defaults/components/default-node/default-node.component.ts","type":"component","linktype":"component","name":"DefaultNodeComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/angular/src/lib/defaults/components/default-port/default-port.component.ts","type":"component","linktype":"component","name":"DefaultPortComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/angular/src/lib/defaults/defaults.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"COMPONENTS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/angular/src/lib/defaults/defaults.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DEFAULTS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/angular/src/lib/diagram/diagram.component.ts","type":"component","linktype":"component","name":"RxZuDiagramComponent","coveragePercent":5,"coverageCount":"2/34","status":"low"},{"filePath":"libs/angular/src/lib/engine.service.ts","type":"injectable","linktype":"injectable","name":"EngineService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/angular/src/lib/factory.service.ts","type":"injectable","linktype":"injectable","name":"FactoryService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/angular/src/lib/injection.tokens.ts","type":"interface","linktype":"interface","name":"ComponentProviderOptions","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/angular/src/lib/injection.tokens.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"COMPONENT","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/angular/src/lib/injection.tokens.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DIAGRAM_DEFAULT_OPTIONS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/angular/src/lib/injection.tokens.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MODEL","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/angular/src/lib/registry.service.ts","type":"injectable","linktype":"injectable","name":"RegistryService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/angular/src/lib/utils/decorators.ts","type":"interface","linktype":"interface","name":"ZonedClass","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/angular/src/lib/utils/decorators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"OutsideZone","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/angular/src/lib/utils/template-var.directive.ts","type":"directive","linktype":"directive","name":"TemplateVarDirective","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/angular/src/lib/utils/template-var.directive.ts","type":"class","linktype":"classe","name":"TemplateVarContext","coveragePercent":0,"coverageCount":"0/3","status":"low"}]}}');(0,angular.setCompodocJson)(documentation_namespaceObject);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},docs:{theme:create.n.dark},options:{storySort:{order:["Getting Started","Zoom To Fit","Zoom To Node","Fit To Center","Auto Arrange","Drag And Drop","Dynamic Ports","Performance","Actions","Themes","Changelog"]}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.kg.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./libs/angular-storybook/stories/changelog.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>changelog_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),blocks=__webpack_require__("./node_modules/@storybook/addon-docs/blocks.js");var _excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(blocks.h_,{title:"Changelog",mdxType:"Meta"}),(0,esm.kt)(blocks.dk,{mdxType:"Description"},"# [3.3.0](https://github.com/netzerstudio/rxzu/compare/v3.2.4...v3.3.0) (2022-04-09)\n\n\n### Features\n\n* **angular 13:** added support for angular 13 ([d8cc103](https://github.com/netzerstudio/rxzu/commit/d8cc103502a5a3597baf76631042a7d903fda42f))\n\n# 1.0.0 (2022-04-09)\n\n\n### Features\n\n* **dependencies:** angular 13 support ([d43a68e](https://github.com/netzerstudio/rxzu/commit/d43a68e42510c196a81fb006ffd6d4a2b298517c))\n"))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Changelog",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const changelog_stories=componentMeta},"./libs/angular-storybook/stories/getting-started.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>getting_started_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),blocks=__webpack_require__("./node_modules/@storybook/addon-docs/blocks.js");const code_brackets_namespaceObject=__webpack_require__.p+"static/media/code-brackets.2e1112d7.svg",colors_namespaceObject=__webpack_require__.p+"static/media/colors.a4bd0486.svg",comments_namespaceObject=__webpack_require__.p+"static/media/comments.a3859089.svg",flow_namespaceObject=(__webpack_require__.p,__webpack_require__.p+"static/media/flow.edad2ac1.svg"),plugin_namespaceObject=__webpack_require__.p+"static/media/plugin.d494b228.svg",stackalt_namespaceObject=(__webpack_require__.p,__webpack_require__.p+"static/media/stackalt.dba9fbb3.svg");var _excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(blocks.h_,{title:"Getting Started",mdxType:"Meta"}),(0,esm.kt)("style",null,"\n  .subheading {\n    --mediumdark: '#999999';\n    font-weight: 900;\n    font-size: 13px;\n    color: #999;\n    letter-spacing: 6px;\n    line-height: 24px;\n    text-transform: uppercase;\n    margin-bottom: 12px;\n    margin-top: 40px;\n  }\n\n  .link-list {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    row-gap: 10px;\n  }\n\n  @media (min-width: 620px) {\n    .link-list {\n      row-gap: 20px;\n      column-gap: 20px;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media all and (-ms-high-contrast:none) {\n  .link-list {\n      display: -ms-grid;\n      -ms-grid-columns: 1fr 1fr;\n      -ms-grid-rows: 1fr 1fr;\n    }\n  }\n\n  .link-item {\n    display: block;\n    padding: 20px 30px 20px 15px;\n    border: 1px solid white;\n    border-radius: 5px;\n    transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .link-item:hover {\n    border-color: #1EA7FD50;\n    transform: translate3d(0, -3px, 0);\n    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n  }\n\n  .link-item:active {\n    border-color: #1EA7FD;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .link-item strong {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 2px;\n  }\n\n  .link-item img {\n    height: 40px;\n    width: 40px;\n    margin-right: 15px;\n    flex: none;\n  }\n\n  .link-item span {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  .tip {\n    display: inline-block;\n    border-radius: 1em;\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 700;\n    background: #E7FDD8;\n    color: #66BF3C;\n    padding: 4px 12px;\n    margin-right: 10px;\n    vertical-align: top;\n  }\n\n  .tip-wrapper {\n    font-size: 13px;\n    line-height: 20px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n\n  .tip-wrapper code {\n    font-size: 12px;\n    display: inline-block;\n  }\n\n\n"),(0,esm.kt)("h1",{id:"welcome-to-rxzu"},"Welcome to RxZu"),(0,esm.kt)("p",null,"RxZu is a diagrams engine system, built on top of RxJS, which takes the idea of graphic visualization to the next level in terms of performance, rendering optimization, and customizability."),(0,esm.kt)("p",null,"RxZu encourages creativity. It allows you to create any node, link, label, or even a custom entity and provide powerful tools with a moderate learning curve, suitable for both experienced and inexperienced developers alike."),(0,esm.kt)("p",null,"Browse example stories now by navigating to them in the sidebar.\nView their code in the ",(0,esm.kt)("inlineCode",{parentName:"p"},"./stories")," directory to learn how they work."),(0,esm.kt)("div",{class:"subheading"},"Installation"),(0,esm.kt)("p",null,"Install from the NPM repository using yarn or npm:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @rxzu/angular\n")),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @rxzu/angular\n")),(0,esm.kt)("p",null,"On production environemnt add the following:"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"main.ts")),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-typescript"},"import { enableProdMode } from '@angular/core';\nimport { enableDiagramProdMode } from '@rxzu/angular';\n\n...\nif(environemnt.production) {\n    enableDiagramProdMode();\n    enableProdMode();\n}\n...\n")),(0,esm.kt)("div",{class:"subheading"},"Configure"),(0,esm.kt)("div",{class:"link-list"},(0,esm.kt)("a",{class:"link-item",href:"https://github.com/netzerstudio/rxzu/tree/main/libs/angular-storybook/stories",target:"_blank"},(0,esm.kt)("img",{src:plugin_namespaceObject,alt:"plugin"}),(0,esm.kt)("span",null,(0,esm.kt)("strong",null,"Presets for popular entities"),"Easy setup for default entities")),(0,esm.kt)("a",{class:"link-item",href:"https://github.com/netzerstudio/rxzu/tree/main/libs/angular-storybook/stories",target:"_blank"},(0,esm.kt)("img",{src:stackalt_namespaceObject,alt:"Build"}),(0,esm.kt)("span",null,(0,esm.kt)("strong",null,"Build customized entities"),"How to customize and create your own entities")),(0,esm.kt)("a",{class:"link-item",href:"https://github.com/netzerstudio/rxzu/blob/main/libs/angular-storybook/stories/demo-diagram.component.scss",target:"_blank"},(0,esm.kt)("img",{src:colors_namespaceObject,alt:"colors"}),(0,esm.kt)("span",null,(0,esm.kt)("strong",null,"Styling"),"How to configure CSS for the diagram")),(0,esm.kt)("a",{class:"link-item",href:"https://github.com/netzerstudio/rxzu/tree/main/libs/core/src/lib/plugins",target:"_blank"},(0,esm.kt)("img",{src:flow_namespaceObject,alt:"flow"}),(0,esm.kt)("span",null,(0,esm.kt)("strong",null,"Plugins"),"Plugins and libraries for additional functionality"))),(0,esm.kt)("div",{class:"subheading"},"Learn"),(0,esm.kt)("div",{class:"link-list"},(0,esm.kt)("a",{class:"link-item",href:"https://github.com/netzerstudio/rxzu",target:"_blank"},(0,esm.kt)("img",{src:code_brackets_namespaceObject,alt:"code"}),(0,esm.kt)("span",null,(0,esm.kt)("strong",null,"GitHub project"),"View the source and add issues")),(0,esm.kt)("a",{class:"link-item",href:"https://netzerstudio.slack.com/app_redirect?channel=rxzu",target:"_blank"},(0,esm.kt)("img",{src:comments_namespaceObject,alt:"comments"}),(0,esm.kt)("span",null,(0,esm.kt)("strong",null,"Slack chat"),"Chat with maintainers and the community"))))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Getting Started",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const getting_started_stories=componentMeta},"./libs/angular-storybook/stories/demo-diagram.component.scss?ngResource":module=>{"use strict";module.exports=".demo-diagram {\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #3c3c3c;\n  background-image: linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent);\n  background-size: 50px 50px;\n}\n\n.action-bar {\n  position: fixed;\n  width: 100%;\n  height: 40px;\n  z-index: 2000;\n  background-color: rgba(255, 255, 255, 0.4);\n  display: flex;\n  align-items: center;\n}\n\n.action-bar button {\n  background-color: black;\n  color: white;\n  border-radius: 30px;\n  border: none;\n  padding: 5px 15px;\n  font-weight: bold;\n  cursor: pointer;\n}\n\n.action-bar * {\n  margin: 0 10px;\n}"},"?4f7e":()=>{}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[602],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./libs/angular-storybook/.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.js"),__webpack_exec__("./node_modules/@angular-devkit/build-angular/node_modules/core-js/proposals/reflect-metadata.js"))));__webpack_require__.O()}]);